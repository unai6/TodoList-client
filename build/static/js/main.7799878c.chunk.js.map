{"version":3,"sources":["api/api.js","api/apiCalls.js","Components/NewTask.js","Components/Dashboard.js","Components/Home.js","auth/authContext.js","Components/Login.js","Components/Signup.js","auth/authReducer.js","constants/index.js","auth/authState.js","Routes/AnonRoute.jsx","Routes/PrivateRoute.jsx","config/token.js","Components/AllTasks.js","Components/PendingTasks.js","Components/CompletedTasks.js","Components/Nav.js","Components/SideBar.js","Components/ImportantTasks.js","Routes/BrowserRoutes.js","App.js","serviceWorker.js","index.js"],"names":["axiosInstance","axios","create","baseURL","process","signUpWithGoogle","data","post","signup","getUserTasks","userId","get","createTask","id","deleteTask","taskId","editTask","NewTask","props","history","useHistory","useForm","register","handleSubmit","errors","useState","setisLoading","error","setError","categoryMap","map","doc","key","value","onSubmit","a","match","params","push","className","name","type","placeholder","ref","required","category","description","Dashboard","isOpen","setIsOpen","setData","userTasks","setUserTasks","activeItem","setActiveItem","infoSent","setInfoSent","handler","setHandler","handleTrueOrFalse","useEffect","result","tasks","getDashboard","editTaskHandler","_id","document","location","reload","deleteTaskHandler","console","log","data-test","to","task","index","onClick","showModal","completed","important","importantes","format","createdAt","Modal","show","onHide","Body","message","defaultValue","nickName","htmlFor","Home","currentUserId","user","localStorage","getItem","JSON","parse","responseGoogle","setItem","token","stringify","clientId","buttonText","onSuccess","onFailure","redirectUri","authContext","createContext","Login","authenticate","useContext","AuthContext","Signup","isLoading","email","pattern","password","state","action","payload","loading","removeItem","AuthState","initialState","useReducer","AuthReducer","dispatch","Provider","login","then","res","catch","err","children","AnonRoute","Component","component","rest","render","PrivateRoute","tokenAuth","defaults","headers","common","AllTasks","PendingTasks","CompletedTasks","Nav","given_name","SideBar","menuOpen","setMenuOpen","closeMenuHandler","onStateChange","handleStateChange","disableCloseOnEsc","disableAutoFocus","customBurgerIcon","onClickCapture","ImportantTasks","BrowserRoutes","path","exact","App","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","ReactDOM","StrictMode","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7799878c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const axiosInstance = axios.create({\r\n\tbaseURL:`${process.env.REACT_APP_API_URI}`,\r\n\r\n});\r\n\r\n// axiosInstance.interceptors.response.use(response => {\r\n\r\n// \treturn response.data;\r\n// }, error => {\r\n// \treturn Promise.reject(error);\r\n// });","import {axiosInstance} from './api'\r\n\r\n//userCalls\r\n\r\nexport const signUpWithGoogle = (data) => {\r\n    return axiosInstance.post('/google-signup', data)\r\n}\r\n\r\nexport const signup = (data) => {\r\n    return axiosInstance.post('/signup', data);\r\n};\r\n\r\nexport const login = (data) => {\r\n    return axiosInstance.post('/login', data);\r\n};\r\n\r\nexport const getDashboard = (userId, token) => {\r\n    return axiosInstance.get(`/dashboard/${userId}`, { headers: { Authorization: token }});\r\n};\r\n\r\nexport const getUserData = (userId) => {\r\n    return axiosInstance.get(`/userinfo/${userId}`)\r\n}\r\n\r\nexport const getUserTasks = (userId) => {\r\n    return axiosInstance.get(`/${userId}/alltasks`)\r\n}\r\n\r\n//TaskCalls\r\n\r\nexport const createTask = (id, data) => {\r\n    return axiosInstance.post(`/create-task/${id}`, data);\r\n};\r\n\r\nexport const deleteTask = (userId, taskId, data) => {\r\n    return axiosInstance.post(`/delete-task/${userId}/${taskId}`, data);\r\n};\r\n\r\nexport const editTask = (userId, taskId, data) => {\r\n    return axiosInstance.post(`/edit-task/${userId}/${taskId}`, data)\r\n}","import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../CSS/create-task.css';\r\nimport { createTask } from '../api/apiCalls';\r\n// import Select from 'react-select';\r\n\r\nexport const NewTask = (props) => {\r\n\r\n    const history = useHistory();\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [, setisLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n    const category = [ 'SuperMercado', 'Trabajo', 'Otros'];\r\n    const categoryMap = category.map((doc, key) => { return <option key={key} value={doc}>{doc}</option>});\r\n\r\n\r\n\r\n    const onSubmit = async data => {\r\n        try {\r\n            await createTask(props.match.params.userId, data);\r\n            setisLoading(false);\r\n            history.push(`/dashboard/${props.match.params.userId}`)\r\n\r\n\r\n        } catch (error) {\r\n            setError('ya existe un usuario con ese avatar')\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className='bg-component'>\r\n            <div className='div-createTask'>\r\n            <h4 className='h4-newTask'>Crea tu nueva tarea</h4>\r\n                <form className='form-newTask' onSubmit={handleSubmit(onSubmit)}>\r\n                    {errors.name && <span className='text-danger'> Este campo es obligatorio </span>}\r\n                    <span>{error}</span>\r\n                    <input\r\n                        className='form-control'\r\n                        name='name'\r\n                        type='text'\r\n                        placeholder='Nombre'\r\n                        ref={register({ required: true })}\r\n                    />\r\n                        {errors.category && <span className='text-danger'>Este campo es obligatorio </span>}\r\n          \r\n                    <div>\r\n                        <label className='text-white'>\r\n                            <b>Categoría</b>\r\n                            <select\r\n                                name='category'\r\n                                className='form-control'\r\n                                ref={register({ required: true })}\r\n                            >   \r\n                            <option value=''>Seleccionar</option>\r\n                                {categoryMap}\r\n                            </select>\r\n                        </label>\r\n                    </div>\r\n                    {errors.description && <span className='text-danger'> Este campo es obligatorio </span>}\r\n                    <input\r\n                        className='form-control'\r\n                        name='description'\r\n                        type='text'\r\n                        ref={register({ required: true })}\r\n                        placeholder='Descripción'\r\n                    />\r\n\r\n                    <button className='btn-newTask-short'>Crear tarea</button>\r\n                </form>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport '../CSS/dashboard.css'\r\nimport { getUserData, editTask, deleteTask } from '../api/apiCalls';\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [, setData] = useState('')\r\n    const [userTasks, setUserTasks] = useState([])\r\n    const [activeItem, setActiveItem] = useState('');\r\n    const [error, setError] = useState('')\r\n    const [infoSent, setInfoSent] = useState(false);\r\n    // const [category, setCategory] = useState(['Seleccionar', 'SuperMercado', 'Trabajo', 'Otros']);\r\n    // const categoryMap = category.map(category => category);\r\n    // const handleCategory = () => { setCategory(categoryMap) }\r\n    const [handler, setHandler] = useState(false);\r\n\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const handleTrueOrFalse = () => setHandler(!handler);\r\n\r\n    const showModal = (task) => {\r\n        setIsOpen(true);\r\n        setActiveItem(task)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getDashboard = async () => {\r\n            const result = await getUserData(props.match.params.userId);\r\n            setData(result.data);\r\n            setUserTasks(result.data.tasks)\r\n        };\r\n\r\n        getDashboard()\r\n    }, [props.match.params.userId]);\r\n\r\n    const editTaskHandler = async (data) => {\r\n        try {\r\n            await editTask(props.match.params.userId, activeItem._id, data)\r\n            setInfoSent(!infoSent)\r\n            document.location.reload()\r\n        } catch (error) {\r\n            setError('Lo sentimos, No se puede actualizar esta tarea')\r\n        }\r\n\r\n    }\r\n    const deleteTaskHandler = async (data) => {\r\n        try {\r\n            await deleteTask(props.match.params.userId, activeItem._id, data)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='bg-component' data-test='app-component'>\r\n            <Link to={`/create-task/${props.match.params.userId}`}><button className='btn-create-task'> + NUEVA TAREA</button></Link>\r\n            <div className='div-tasks'>\r\n                <div className='d-flex justify-content-between mb-3'>\r\n                    <span className='tasks-headers'>ÚLTIMAS TAREAS</span>\r\n                    <span className='tasks-headers'>FECHA DE CREACIÓN</span>\r\n                </div>\r\n                {\r\n\r\n                    userTasks.map((task, index) => {\r\n\r\n                        return (\r\n                            <div key={index} className='d-flex justify-content-between'>\r\n                                <div className='task-name p-2' onClick={() => showModal(task)} > {\r\n                                    task.completed ?\r\n                                        <del>\r\n                                            <span className=\r\n                                                {\r\n                                                    !task.completed ?\r\n                                                        'text-danger' :\r\n                                                        task.completed ?\r\n                                                            'text-success' :\r\n                                                            (task.category === 'Trabajo' || task.category === 'Supermercado') && task.important && !task.completed ?\r\n                                                                'text-info' :\r\n                                                                task.category && !task.important && !task.completed === 'Supermercado' ?\r\n                                                                    'text-dark' :\r\n                                                                    null\r\n                                                }>\r\n                                                {task.name}\r\n                                            </span>\r\n                                        </del>\r\n                                        :\r\n                                        <span className=\r\n                                            {\r\n                                                !task.completed ?\r\n                                                    'text-danger' :\r\n                                                    task.completed ?\r\n                                                        'text-success' :\r\n                                                        (task.category === 'Trabajo' || task.category === 'Supermercado') && !task.important ?\r\n                                                            'text-info' :\r\n                                                            task.category && !task.importantes === 'Supermercado' ?\r\n                                                                'text-dark' :\r\n                                                                null\r\n                                            }>\r\n                                            {task.name}\r\n                                        </span>\r\n                                }\r\n                                    <span className={\r\n                                        !task.completed ?\r\n                                            'text-danger taskBall-1' :\r\n                                            task.completed ?\r\n                                                'text-success taskBall-1' :\r\n                                                (task.category === 'Trabajo' || task.category === 'Supermercado' || task.category === 'Otros') && !task.important ?\r\n                                                    'text-warning taskBall-1' :\r\n                                                    task.category && !task.important === 'Supermercado' ?\r\n                                                        'text-dark taskBall-1' :\r\n                                                        null\r\n                                    }>\r\n                                        {<i className=\"fas fa-circle ball-state\"></i>}\r\n                                    </span>\r\n\r\n                                    <span className={\r\n                                        task.important ?\r\n                                            'text-warning' :\r\n                                            'text-dark'\r\n                                    }>\r\n                                        {<i className=\"fas fa-circle ball-state\"></i>}\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <span className='date'><Moment format=\"D MMM YYYY\">{task.createdAt}</Moment></span>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <div className='vertical-lign'></div>\r\n            </div>\r\n            {\r\n                activeItem ?\r\n                    <Modal show={isOpen} onHide={hideModal}>\r\n                        <Modal.Body>\r\n                            <form onSubmit={handleSubmit(editTaskHandler)}>\r\n                                {errors.name && <span> {errors.name.message ? errors.name.message : 'Este campo es obligatorio'} </span>}\r\n                                <span>{error}</span>\r\n                                <label className='text-info font-weight-bold '>Nombre</label>\r\n                                <input\r\n                                    defaultValue={activeItem.name}\r\n                                    className='form-control'\r\n                                    name='name'\r\n                                    type='text'\r\n                                    placeholder='Nombre'\r\n                                    ref={register}\r\n                                />\r\n                                {errors.category && <span> {errors.category.message ? errors.nickName.message : 'Este campo es obligatorio'} </span>}\r\n\r\n                                <div>\r\n                                    <label className='text-info font-weight-bold '>\r\n                                        Categoría\r\n                                        <input\r\n                                            className='form-control'\r\n                                            type='text'\r\n                                            name='category'\r\n                                            defaultValue={activeItem.category}\r\n                                            ref={register}\r\n                                        />\r\n                                        {/* <select\r\n                                            name='category'\r\n                                            className='form-control'\r\n                                            ref={register({required:true})}\r\n                                            onChange={e => handleCategory(e)}\r\n                                        >\r\n                                            {\r\n                                                categoryMap.map((doc, key) => {\r\n                                                    return <option key={key} value={doc}>{doc}</option>;\r\n                                                })\r\n\r\n                                            }\r\n                                        </select> */}\r\n                                    </label>\r\n                                </div>\r\n                                {errors.description && <span> {errors.description.message ? errors.description.message : 'Este campo es obligatorio'} </span>}\r\n                                <label className='text-info font-weight-bold '>Descripción</label>\r\n                                <input\r\n                                    className='form-control'\r\n                                    name='description'\r\n                                    type='text'\r\n                                    ref={register}\r\n                                    placeholder='Descripción'\r\n                                    defaultValue={activeItem.description}\r\n                                />\r\n\r\n\r\n                                <div className=\"switch-button\">\r\n                                    <label className='text-info font-weight-bold '>Estado de la tarea</label>\r\n                                    <input className=\"switch-button__checkbox\" type=\"checkbox\" id=\"switch-label\" name=\"completed\" onClick={handleTrueOrFalse} ref={register} />\r\n                                    <label htmlFor=\"switch-label\" className=\"switch-button__label\"></label>\r\n                                </div>\r\n                                <div className=\"switch-button\">\r\n                                    <label className='text-info font-weight-bold '>Marcar como importante</label>\r\n                                    <input className=\"switch-button__checkbox\" type=\"checkbox\" id=\"switch-label-2\" name=\"important\" onClick={handleTrueOrFalse} ref={register} />\r\n                                    <label htmlFor=\"switch-label-2\" className=\"switch-button__label\"></label>\r\n                                </div>\r\n                                {\r\n                                    infoSent\r\n                                        ?\r\n                                        <p className='font-weight-bold'>¡Tarea Actualizada!</p>\r\n                                        :\r\n                                        <div className='d-flex justify-content-center mt-4'>\r\n                                            <button className='btn btn-info mr-2'>Actualizar</button>\r\n                                            <button className='btn btn-danger ml-2' onClick={deleteTaskHandler}>Eliminar</button>\r\n                                        </div>\r\n                                }\r\n                            </form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    :\r\n                    null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React from 'react'\r\nimport '../CSS/home.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { signUpWithGoogle } from '../api/apiCalls';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const Home = () => {\r\n    const history = useHistory()\r\n    const CLIENT_ID = '897202844317-e4dqh3eifnft6p47olbqfkm0iv5fu9k2.apps.googleusercontent.com'\r\n    let user = localStorage.getItem('user');\r\n    let currentUserId;\r\n\r\n    if (user !== null) {\r\n        currentUserId = JSON.parse(user)\r\n\r\n    }\r\n\r\n    const responseGoogle = async (data) => {\r\n        try {\r\n            const result = await signUpWithGoogle(data);\r\n         \r\n            localStorage.setItem('token', result.data.token)\r\n            localStorage.setItem('user', JSON.stringify(result.data.user))\r\n             history.push(`/dashboard/${result.data.user._id}`)\r\n             document.location.reload()\r\n           \r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='background-home'>\r\n            <Link to='/signup' ><button>Registrarse</button></Link>\r\n            <GoogleLogin\r\n                clientId={CLIENT_ID}\r\n                buttonText=\"Login with Google\"\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseGoogle}\r\n                redirectUri={'https://todo.unaigo.com'}\r\n\r\n            />\r\n            <>\r\n                {\r\n                    user ?\r\n\r\n                        <Link to={`/dashboard/${currentUserId.userId}`} ><button>Ir a mi escritorio</button> </Link>\r\n\r\n                        :\r\n                        <Link to='/login' ><button>Iniciar Sesión</button> </Link>\r\n\r\n                }\r\n            </>\r\n\r\n        </div>\r\n    )\r\n}\r\n","  \r\nimport { createContext } from 'react';\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;","import React, { useContext } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport AuthContext from '../auth/authContext';\r\n\r\nexport const Login = () => {\r\n\r\n    const { register, handleSubmit } = useForm();\r\n    const authContext = useContext(AuthContext);\r\n    const { authenticate } = authContext;\r\n    // const [isLoading, setisLoading] = useState(true)\r\n    // const [error, setError] = useState(false)\r\n\r\n    const onSubmit = data => {\r\n        authenticate(data)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <input\r\n                    className='form-control'\r\n                    name='email'\r\n                    type='text'\r\n                    placeholder='email'\r\n                    ref={register({ required: true })}\r\n                />\r\n                <input\r\n                    className='form-control'\r\n                    name='password'\r\n                    type='password'\r\n                    placeholder='password'\r\n                    ref={register({ required: true })}\r\n                />\r\n                <input\r\n                    type='checkbox'\r\n                    name='remember'\r\n                    ref={register}\r\n                />\r\n                <button>Acceder en mi cuenta</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { signup } from '../api/apiCalls';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const Signup = () => {\r\n    const history = useHistory();\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [isLoading, setisLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n\r\n    const onSubmit = async data => {\r\n        try {\r\n            await signup(data);\r\n            setisLoading(false);\r\n            history.push('/login')\r\n\r\n        } catch (error) {\r\n            setError('ya existe un usuario con ese avatar')\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                {errors.name && <span> {errors.name.message ? errors.name.message : 'Este campo es obligatorio'} </span>}\r\n                <span>{error}</span>\r\n                <input\r\n                    className='form-control'\r\n                    name='name'\r\n                    type='text'\r\n                    placeholder='Nombre'\r\n                    ref={register({ required: true })}\r\n                />\r\n                {errors.email && <span className='text-danger'> {errors.email.message ? errors.email.message : 'Este campo es obligatorio'} </span>}\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    placeholder='email'\r\n                    className={errors.email ? 'form-control signup-fields mx-auto border-danger' : 'form-control signup-fields mx-auto'}\r\n                    ref={register({\r\n                        required: true, pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: 'La dirección no es válida' }\r\n                    })} />\r\n                {errors.nickName && <span> {errors.nickName.message ? errors.nickName.message : 'Este campo es obligatorio'} </span>}\r\n                <input\r\n                    className='form-control'\r\n                    name='nickName'\r\n                    type='text'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Avatar'\r\n                />\r\n                {errors.password && <span> {errors.password.message ? errors.password.message : 'Este campo es obligatorio'} </span>}\r\n                <input\r\n                    className='form-control'\r\n                    name='password'\r\n                    type='text'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Contraseña'\r\n                />\r\n                <input\r\n                    type='checkbox'\r\n                    name='remember'\r\n                    ref={register}\r\n                />\r\n                {\r\n                    isLoading ?\r\n                        <button>Registrarse</button>\r\n                        :\r\n                        <p>Gracias por registrate</p>\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { LOGIN_SUCCESS, LOGIN_ERROR} from '../constants/index';\r\n\r\nexport default (state, action) => {\r\n\tswitch(action.type) {\r\n        case LOGIN_SUCCESS:\r\n  \r\n\t\t\tlocalStorage.setItem('token', action.payload.data.token);\r\n            localStorage.setItem('user', JSON.stringify(action.payload.data.user));\r\n        \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: action.payload.token,\r\n                user: action.payload.user,\r\n\t\t\t\tloading: false\r\n            }\t\t\r\n\r\n\t\tcase LOGIN_ERROR:\r\n\t\t\tlocalStorage.removeItem('token');\r\n\t\t\tlocalStorage.removeItem('user');\r\n            \r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\ttoken: null,\r\n                    user: null,\r\n\t\t\t\t\tmessage: action.payload, \r\n                    loading: false\r\n\t\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n} \r\n\r\n    \r\n\r\n\r\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useReducer } from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\n\r\nimport {login} from '../api/apiCalls';\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nimport { LOGIN_SUCCESS, LOGIN_ERROR } from '../constants/index';\r\n\r\nexport const AuthState = props => {\r\n  const initialState = {\r\n    user: localStorage.getItem(\"user\"),\r\n    token: localStorage.getItem(\"token\"),\r\n    loading: true\r\n   }\r\n\r\n  const history = useHistory();\r\n  const [ state, dispatch ] = useReducer(AuthReducer, initialState);\r\n\r\n  const authenticate = (data) => {\r\n    login(data)\r\n      .then(res=> {\r\n       \r\n        dispatch({ type: LOGIN_SUCCESS, payload: res })\r\n        history.push(`/dashboard/${res.data.user.userId}`);\r\n        document.location.reload()\r\n      })\r\n      .catch(err => { \r\n        dispatch({ type: LOGIN_ERROR, payload: err }) \r\n      })\r\n  }\r\n\r\n  return(\r\n    <AuthContext.Provider\r\n      value={{ \r\n        token: state.token,\r\n        user: state.user,\r\n        loading: state.loading,\r\n        authenticate,\r\n  \r\n      }}\r\n    >\r\n    {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthContext from '../auth/authContext';\r\n\r\nexport const AnonRoute = (props) => { \r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { component: Component, ...rest } = props; \r\n\r\n  return (\r\n    <>\r\n      {!authContext.token ? ( \r\n        <Route render={(props) => <Component {...props} />} {...rest} /> \r\n      ) : (\r\n        <Redirect to=\"/\" /> \r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = props => {\r\n\r\n  \r\n  const { component: Component, ...rest } = props;\r\n  const token = localStorage.getItem('token');\r\n\r\n  return (\r\n    <>\r\n      { token ? (\r\n\r\n        <Route render={props => <Component {...props} />} {...rest} />\r\n      ) : (\r\n        <Redirect to=\"/\" /> \r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import {axiosInstance} from '../api/api';\r\n\r\nconst tokenAuth = token => {\r\n    if(token) {\r\n        axiosInstance.defaults.headers.common['Authorization'] =  token;\r\n    } else {\r\n        delete axiosInstance.defaults.headers.common['Authorization'] \r\n    }\r\n}\r\n\r\nexport default tokenAuth;","import React, { useEffect, useState } from 'react';\r\nimport '../CSS/dashboard.css'\r\nimport { getUserTasks, editTask, deleteTask } from '../api/apiCalls';\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst AllTasks = (props) => {\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [, setData] = useState('')\r\n    const [userTasks, setUserTasks] = useState([])\r\n    const [activeItem, setActiveItem] = useState('');\r\n    const [error, setError] = useState('')\r\n    const [infoSent, setInfoSent] = useState(false);\r\n    // const [category, setCategory] = useState(['Seleccionar', 'SuperMercado', 'Trabajo', 'Otros']);\r\n    // const categoryMap = category.map(category => category);\r\n    // const handleCategory = () => { setCategory(categoryMap) }\r\n    const [handler, setHandler] = useState(false);\r\n\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const handleTrueOrFalse = () => setHandler(!handler);\r\n\r\n    const showModal = (task) => {\r\n        setIsOpen(true);\r\n        setActiveItem(task)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getDashboard = async () => {\r\n            const result = await getUserTasks(props.match.params.userId);\r\n            setData(result.data);\r\n            setUserTasks(result.data.tasks)\r\n        };\r\n\r\n        getDashboard()\r\n    }, [props.match.params.userId]);\r\n\r\n\r\n    const editTaskHandler = async (data) => {\r\n        try {\r\n            await editTask(props.match.params.userId, activeItem._id, data)\r\n            setInfoSent(!infoSent)\r\n            document.location.reload()\r\n        } catch (error) {\r\n            setError('Lo sentimos, No se puede actualizar esta tarea')\r\n        }\r\n\r\n    }\r\n\r\n    const deleteTaskHandler = async (data) => {\r\n        try {\r\n            await deleteTask(props.match.params.userId, activeItem._id, data)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='bg-component' data-test='app-component'>\r\n            <Link to={`/create-task/${props.match.params.userId}`}><button className='btn-create-task'> + NUEVA TAREA</button></Link>\r\n            <div className='div-tasks'>\r\n                <div className='d-flex justify-content-between mb-3'>\r\n                    <span className='tasks-headers'>MIS TAREAS</span>\r\n                    <span className='tasks-headers'>FECHA DE CREACIÓN</span>\r\n                </div>\r\n                {\r\n\r\n                    userTasks.map((task, index) => {\r\n\r\n                        return (\r\n                            <div key={index} className='d-flex justify-content-between'>\r\n                                <div className='task-name p-2' onClick={() => showModal(task)} > {\r\n                                    task.completed ?\r\n                                        <del>\r\n\r\n                                            <span className=\r\n                                                {\r\n                                                    task.completed === false ?\r\n                                                        'text-danger' :\r\n                                                        task.completed === true ?\r\n                                                            'text-success' :\r\n                                                            (task.category === 'Trabajo' || task.category === 'Supermercado') && task.important === true && task.completed === false ?\r\n                                                                'text-info' :\r\n                                                                task.category && !task.important === true && task.completed === false === 'Supermercado' ?\r\n                                                                    'text-dark' :\r\n                                                                    null\r\n                                                }>\r\n                                                {task.name}\r\n                                            </span>\r\n                                        </del>\r\n                                        :\r\n                                        <span className=\r\n                                            {\r\n                                                task.completed === false ?\r\n                                                    'text-danger' :\r\n                                                    task.completed === true ?\r\n                                                        'text-success' :\r\n                                                        (task.category === 'Trabajo' || task.category === 'Supermercado') && !task.important === true ?\r\n                                                            'text-info' :\r\n                                                            task.category && !task.importantes === 'Supermercado' ?\r\n                                                                'text-dark' :\r\n                                                                null\r\n                                            }>\r\n                                            {task.name}\r\n                                        </span>\r\n                                }\r\n                                    <span className={\r\n                                        task.completed === false ?\r\n                                            'text-danger taskBall-1' :\r\n                                            task.completed === true ?\r\n                                                'text-success taskBall-1' :\r\n                                                (task.category === 'Trabajo' || task.category === 'Supermercado' || task.category === 'Otros') && !task.important === true ?\r\n                                                    'text-warning taskBall-1' :\r\n                                                    task.category && !task.importantes === 'Supermercado' ?\r\n                                                        'text-dark taskBall-1' :\r\n                                                        null\r\n                                    }>\r\n                                        {<i className=\"fas fa-circle ball-state\"></i>}\r\n                                    </span>\r\n\r\n                                    <span className={\r\n                                        task.important ?\r\n                                            'text-warning' :\r\n                                            'text-dark'\r\n                                    }>\r\n                                        {<i className=\"fas fa-circle ball-state\"></i>}\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <span className='date'><Moment format=\"D MMM YYYY\">{task.createdAt}</Moment></span>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <div className='vertical-lign'></div>\r\n            </div>\r\n            {\r\n                activeItem ?\r\n                    <Modal show={isOpen} onHide={hideModal}>\r\n                        <Modal.Body>\r\n                            <form onSubmit={handleSubmit(editTaskHandler)}>\r\n                                {errors.name && <span> {errors.name.message ? errors.name.message : 'Este campo es obligatorio'} </span>}\r\n                                <span>{error}</span>\r\n                                <label className='text-info'><b>Nombre</b></label>\r\n                                <input\r\n                                    defaultValue={activeItem.name}\r\n                                    className='form-control'\r\n                                    name='name'\r\n                                    type='text'\r\n                                    placeholder='Nombre'\r\n                                    ref={register}\r\n                                />\r\n                                {errors.category && <span> {errors.category.message ? errors.nickName.message : 'Este campo es obligatorio'} </span>}\r\n\r\n                                <div>\r\n                                    <label className='text-info'>\r\n                                        <b>Categoría</b>\r\n                                        <input\r\n                                            className='form-control'\r\n                                            type='text'\r\n                                            name='category'\r\n                                            defaultValue={activeItem.category}\r\n                                            ref={register}\r\n                                        />\r\n                                        {/* <select\r\n                                            name='category'\r\n                                            className='form-control'\r\n                                            ref={register({required:true})}\r\n                                            onChange={e => handleCategory(e)}\r\n                                        >\r\n                                            {\r\n                                                categoryMap.map((doc, key) => {\r\n                                                    return <option key={key} value={doc}>{doc}</option>;\r\n                                                })\r\n\r\n                                            }\r\n                                        </select> */}\r\n                                    </label>\r\n                                </div>\r\n                                {errors.description && <span> {errors.description.message ? errors.description.message : 'Este campo es obligatorio'} </span>}\r\n                                <label className='text-info'><b>Descripción</b></label>\r\n                                <input\r\n                                    className='form-control'\r\n                                    name='description'\r\n                                    type='text'\r\n                                    ref={register}\r\n                                    placeholder='Descripción'\r\n                                    defaultValue={activeItem.description}\r\n                                />\r\n\r\n\r\n                                <div className=\"switch-button\">\r\n                                    <label className='text-info'><b>Estado de la tarea</b></label>\r\n                                    <input className=\"switch-button__checkbox\" type=\"checkbox\" id=\"switch-label\" name=\"completed\" onClick={handleTrueOrFalse} ref={register} />\r\n                                    <label htmlFor=\"switch-label\" className=\"switch-button__label\"></label>\r\n                                </div>\r\n                                <div className=\"switch-button\">\r\n                                    <label className='text-info'><b>Marcar como importante</b></label>\r\n                                    <input className=\"switch-button__checkbox\" type=\"checkbox\" id=\"switch-label-2\" name=\"important\" onClick={handleTrueOrFalse} ref={register} />\r\n                                    <label htmlFor=\"switch-label-2\" className=\"switch-button__label\"></label>\r\n                                </div>\r\n                                {\r\n                                    infoSent\r\n                                        ?\r\n                                        <p className='font-weight-bold'>¡Tarea Actualizada!</p>\r\n                                        :\r\n                                        <div className='d-flex justify-content-center mt-4'>\r\n                                            <button className='btn btn-info mr-2'>Actualizar</button>\r\n                                            <button className='btn btn-danger ml-2' onClick={deleteTaskHandler}>Eliminar</button>\r\n                                        </div>\r\n                                }\r\n                            </form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    :\r\n                    null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllTasks","import React, { useEffect, useState } from 'react';\r\nimport '../CSS/dashboard.css'\r\nimport { getUserTasks, editTask, deleteTask} from '../api/apiCalls';\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst PendingTasks = (props) => {\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [, setData] = useState('')\r\n    const [userTasks, setUserTasks] = useState([])\r\n    const [activeItem, setActiveItem] = useState('');\r\n    const [error, setError] = useState('')\r\n    const [infoSent, setInfoSent] = useState(false);\r\n    // const [category, setCategory] = useState(['Seleccionar', 'SuperMercado', 'Trabajo', 'Otros']);\r\n    // const categoryMap = category.map(category => category);\r\n    // const handleCategory = () => { setCategory(categoryMap) }\r\n    const [, setHandler] = useState(activeItem);\r\n\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const handleTrueOrFalse = () => setHandler(!activeItem);\r\n\r\n    const showModal = (task) => {\r\n        setIsOpen(true);\r\n        setActiveItem(task)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getDashboard = async () => {\r\n            const result = await getUserTasks(props.match.params.userId);\r\n            setData(result.data);\r\n            setUserTasks(result.data.tasks)\r\n        };\r\n\r\n        getDashboard()\r\n    }, [props.match.params.userId]);\r\n\r\n\r\n    const editTaskHandler = async (data) => {\r\n        try {\r\n            await editTask(props.match.params.userId, activeItem._id, data)\r\n            setInfoSent(!infoSent)\r\n            document.location.reload()\r\n        } catch (error) {\r\n            setError('Lo sentimos, No se puede actualizar esta tarea')\r\n        }\r\n\r\n    }\r\n\r\n    const deleteTaskHandler = async (data) => {\r\n        try{\r\n            await deleteTask(props.match.params.userId, activeItem._id, data)\r\n\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='bg-component' data-test='app-component'>\r\n            <Link to={`/create-task/${props.match.params.userId}`}><button className='btn-create-task'> + NUEVA TAREA</button></Link>\r\n            <div className='div-tasks'>\r\n                <div className='d-flex justify-content-between mb-3'>\r\n                    <span className='tasks-headers'>TAREAS <br/>PENDIENTES</span>\r\n                    <span className='tasks-headers'>FECHA DE CREACIÓN</span>\r\n                </div>\r\n                {\r\n\r\n                    userTasks.map((task, index) => {\r\n\r\n                        return (\r\n                            <div key={index} className='d-flex justify-content-between'>\r\n\r\n                                {\r\n                                    !task.completed ?\r\n\r\n                                        <>\r\n                                            <div className='task-name p-2' onClick={() => showModal(task)} >\r\n\r\n                                                <span className=\r\n                                                    {\r\n                                                        !task.completed ?\r\n                                                            'text-danger'\r\n                                                            :\r\n                                                            null\r\n                                                    }>\r\n                                                    {task.name}\r\n                                                </span>\r\n\r\n                                                <span className={\r\n                                                    !task.completed ?\r\n                                                        'text-danger taskBall-1' :\r\n                                                        (task.category === 'Trabajo' || task.category === 'Supermercado' || task.category === 'Otros') && !task.important === true ?\r\n                                                            'text-warning taskBall-1' :\r\n                                                            task.category && !task.importantes === 'Supermercado' ?\r\n                                                                'text-dark taskBall-1' :\r\n                                                                null\r\n                                                }>\r\n                                                    {!task.completed ? <i className=\"fas fa-circle ball-state\"></i> : null}\r\n                                                </span>\r\n\r\n                                                <span className={\r\n                                                    task.important ?\r\n                                                        'text-warning' :\r\n                                                        'text-dark'\r\n                                                }>\r\n                                                    {!task.completed ? <i className=\"fas fa-circle ball-state\"></i> : null}\r\n                                                </span>\r\n                                            </div>\r\n                                            <div>\r\n                                                <span className='date'><Moment format=\"D MMM YYYY\">{task.createdAt}</Moment></span>\r\n                                            </div>\r\n                                        </>\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <div className='vertical-lign'></div>\r\n            </div>\r\n            {\r\n                activeItem ?\r\n                    <Modal show={isOpen} onHide={hideModal}>\r\n                        <Modal.Body>\r\n                            <form onSubmit={handleSubmit(editTaskHandler)}>\r\n                                {errors.name && <span> {errors.name.message ? errors.name.message : 'Este campo es obligatorio'} </span>}\r\n                                <span>{error}</span>\r\n                                <label className='text-info font-weight-bold '>Nombre</label>\r\n                                <input\r\n                                    defaultValue={activeItem.name}\r\n                                    className='form-control'\r\n                                    name='name'\r\n                                    type='text'\r\n                                    placeholder='Nombre'\r\n                                    ref={register}\r\n                                />\r\n                                {errors.category && <span> {errors.category.message ? errors.nickName.message : 'Este campo es obligatorio'} </span>}\r\n\r\n                                <div>\r\n                                    <label className='text-info font-weight-bold '>\r\n                                        Categoría\r\n                                        <input\r\n                                            className='form-control'\r\n                                            type='text'\r\n                                            name='category'\r\n                                            defaultValue={activeItem.category}\r\n                                            ref={register}\r\n                                        />\r\n                                        {/* <select\r\n                                            name='category'\r\n                                            className='form-control'\r\n                                            ref={register({required:true})}\r\n                                            onChange={e => handleCategory(e)}\r\n                                        >\r\n                                            {\r\n                                                categoryMap.map((doc, key) => {\r\n                                                    return <option key={key} value={doc}>{doc}</option>;\r\n                                                })\r\n\r\n                                            }\r\n                                        </select> */}\r\n                                    </label>\r\n                                </div>\r\n                                {errors.description && <span> {errors.description.message ? errors.description.message : 'Este campo es obligatorio'} </span>}\r\n                                <label className='text-info font-weight-bold '>Descripción</label>\r\n                                <input\r\n                                    className='form-control'\r\n                                    name='description'\r\n                                    type='text'\r\n                                    ref={register}\r\n                                    placeholder='Descripción'\r\n                                    defaultValue={activeItem.description}\r\n                                />\r\n\r\n\r\n                                <div className=\"switch-button\">\r\n                                    <label className='text-info font-weight-bold '>Estado de la tarea</label>\r\n                                    <input className=\"switch-button__checkbox\" type=\"checkbox\" id=\"switch-label\" name=\"completed\" onClick={handleTrueOrFalse} ref={register} />\r\n                                    <label htmlFor=\"switch-label\" className=\"switch-button__label\"></label>\r\n                                </div>\r\n                                <div className=\"switch-button\">\r\n                                    <label className='text-info font-weight-bold '>Marcar como importante</label>\r\n                                    <input className=\"switch-button__checkbox\" type=\"checkbox\" id=\"switch-label-2\" name=\"important\" onClick={handleTrueOrFalse} ref={register} />\r\n                                    <label htmlFor=\"switch-label-2\" className=\"switch-button__label\"></label>\r\n                                </div>\r\n                                {\r\n                                    infoSent\r\n                                        ?\r\n                                        <p className='font-weight-bold'>¡Tarea Actualizada!</p>\r\n                                        :\r\n                                        <div className='d-flex justify-content-center mt-4'>\r\n                                            <button className='btn btn-info mr-2'>Actualizar</button>\r\n                                            <button className='btn btn-danger ml-2' onClick={deleteTaskHandler}>Eliminar</button>\r\n                                        </div>\r\n                                        \r\n                                }\r\n                            </form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    :\r\n                    null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PendingTasks","import React, { useEffect, useState } from 'react';\r\nimport '../CSS/dashboard.css'\r\nimport { getUserTasks, editTask, deleteTask } from '../api/apiCalls';\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst CompletedTasks = (props) => {\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [, setData] = useState('')\r\n    const [userTasks, setUserTasks] = useState([])\r\n    const [activeItem, setActiveItem] = useState('');\r\n    const [error, setError] = useState('')\r\n    const [infoSent, setInfoSent] = useState(false);\r\n    // const [category, setCategory] = useState(['Seleccionar', 'SuperMercado', 'Trabajo', 'Otros']);\r\n    // const categoryMap = category.map(category => category);\r\n    // const handleCategory = () => { setCategory(categoryMap) }\r\n    const [handler, setHandler] = useState(false);\r\n\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const handleTrueOrFalse = () => setHandler(!handler);\r\n\r\n    const showModal = (task) => {\r\n        setIsOpen(true);\r\n        setActiveItem(task)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getDashboard = async () => {\r\n            const result = await getUserTasks(props.match.params.userId);\r\n            setData(result.data);\r\n            setUserTasks(result.data.tasks)\r\n        };\r\n\r\n        getDashboard()\r\n    }, [props.match.params.userId]);\r\n\r\n\r\n    const editTaskHandler = async (data) => {\r\n        try {\r\n            await editTask(props.match.params.userId, activeItem._id, data)\r\n            setInfoSent(!infoSent)\r\n            document.location.reload()\r\n        } catch (error) {\r\n            setError('Lo sentimos, No se puede actualizar esta tarea')\r\n        }\r\n\r\n    }\r\n\r\n    const deleteTaskHandler = async (data) => {\r\n        try {\r\n            await deleteTask(props.match.params.userId, activeItem._id, data)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='bg-component' data-test='app-component'>\r\n            <Link to={`/create-task/${props.match.params.userId}`}><button className='btn-create-task'> + NUEVA TAREA</button></Link>\r\n            <div className='div-tasks'>\r\n                <div className='d-flex justify-content-between mb-3'>\r\n                    <span className='tasks-headers'>TAREAS COMPLETADAS</span>\r\n                    <span className='tasks-headers'>FECHA DE CREACIÓN</span>\r\n                </div>\r\n                {\r\n\r\n                    userTasks.map((task, index) => {\r\n\r\n                        return (\r\n                            <div key={index} className='d-flex justify-content-between'>\r\n\r\n                                {\r\n                                    task.completed ?\r\n\r\n                                        <>\r\n                                            <div className='task-name p-2' onClick={() => showModal(task)} >\r\n\r\n                                                <span className=\r\n                                                    {\r\n                                                        task.completed ?\r\n                                                            'text-success'\r\n                                                            :\r\n                                                            null\r\n                                                    }>\r\n                                                    <del>{task.name}</del>\r\n                                                </span>\r\n\r\n                                                <span className={\r\n                                                    task.completed ?\r\n                                                        'text-success taskBall-1' :\r\n                                                        (task.category === 'Trabajo' || task.category === 'Supermercado' || task.category === 'Otros') && !task.important === true ?\r\n                                                            'text-warning taskBall-1' :\r\n                                                            task.category && !task.importantes === 'Supermercado' ?\r\n                                                                'text-dark taskBall-1' :\r\n                                                                null\r\n                                                }>\r\n                                                    {task.completed ? <i className=\"fas fa-circle ball-state\"></i> : null}\r\n                                                </span>\r\n\r\n                                                <span className={\r\n                                                    task.important ?\r\n                                                        'text-warning' :\r\n                                                        'text-dark'\r\n                                                }>\r\n                                                    {task.completed ? <i className=\"fas fa-circle ball-state\"></i> : null}\r\n                                                </span>\r\n                                            </div>\r\n                                            <div>\r\n                                                <span className='date'><Moment format=\"D MMM YYYY\">{task.createdAt}</Moment></span>\r\n                                            </div>\r\n                                        </>\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <div className='vertical-lign'></div>\r\n            </div>\r\n            {\r\n                activeItem ?\r\n                    <Modal show={isOpen} onHide={hideModal}>\r\n                        <Modal.Body>\r\n                            <form onSubmit={handleSubmit(editTaskHandler)}>\r\n                                {errors.name && <span> {errors.name.message ? errors.name.message : 'Este campo es obligatorio'} </span>}\r\n                                <span>{error}</span>\r\n                                <label className='text-info font-weight-bold '>Nombre</label>\r\n                                <input\r\n                                    defaultValue={activeItem.name}\r\n                                    className='form-control'\r\n                                    name='name'\r\n                                    type='text'\r\n                                    placeholder='Nombre'\r\n                                    ref={register}\r\n                                />\r\n                                {errors.category && <span> {errors.category.message ? errors.nickName.message : 'Este campo es obligatorio'} </span>}\r\n\r\n                                <div>\r\n                                    <label className='text-info font-weight-bold'>\r\n                                        Categoría\r\n                                        <input\r\n                                            className='form-control'\r\n                                            type='text'\r\n                                            name='category'\r\n                                            defaultValue={activeItem.category}\r\n                                            ref={register}\r\n                                        />\r\n                                        {/* <select\r\n                                            name='category'\r\n                                            className='form-control'\r\n                                            ref={register({required:true})}\r\n                                            onChange={e => handleCategory(e)}\r\n                                        >\r\n                                            {\r\n                                                categoryMap.map((doc, key) => {\r\n                                                    return <option key={key} value={doc}>{doc}</option>;\r\n                                                })\r\n\r\n                                            }\r\n                                        </select> */}\r\n                                    </label>\r\n                                </div>\r\n                                {errors.description && <span> {errors.description.message ? errors.description.message : 'Este campo es obligatorio'} </span>}\r\n                                <label className='text-info font-weight-bold'>Descripción</label>\r\n                                <input\r\n                                    className='form-control'\r\n                                    name='description'\r\n                                    type='text'\r\n                                    ref={register}\r\n                                    placeholder='Descripción'\r\n                                    defaultValue={activeItem.description}\r\n                                />\r\n\r\n\r\n                                <div className=\"switch-button\">\r\n                                    <label className='text-info font-weight-bold'>Estado de la tarea</label>\r\n                                    <input className=\"switch-button__checkbox\" type=\"checkbox\" id=\"switch-label\" name=\"completed\" onClick={handleTrueOrFalse} ref={register} />\r\n                                    <label htmlFor=\"switch-label\" className=\"switch-button__label\"></label>\r\n                                </div>\r\n                                <div className=\"switch-button\">\r\n                                    <label className='text-info font-weight-bold'>Marcar como importante</label>\r\n                                    <input className=\"switch-button__checkbox\" type=\"checkbox\" id=\"switch-label-2\" name=\"important\" onClick={handleTrueOrFalse} ref={register} />\r\n                                    <label htmlFor=\"switch-label-2\" className=\"switch-button__label\"></label>\r\n                                </div>\r\n                                {\r\n                                    infoSent\r\n                                        ?\r\n                                        <p className='font-weight-bold'>¡Tarea Actualizada!</p>\r\n                                        :\r\n                                        <div className='d-flex justify-content-center mt-4'>\r\n                                            <button className='btn btn-info mr-2'>Actualizar</button>\r\n                                            <button className='btn btn-danger ml-2' onClick={deleteTaskHandler}>Eliminar</button>\r\n                                        </div>\r\n                                }\r\n                            </form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    :\r\n                    null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompletedTasks","import React from 'react';\r\nimport '../CSS/dashboard.css'\r\nimport { Redirect  } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n\r\n   \r\n    const user = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const handleClickLogout = () => {\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n        document.location.reload()\r\n        return <Redirect to={'/'} />\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='nav-div' data-test='app-component'>\r\n            <button className='btn-logout d-block ml-auto mb-4 mr-2 mt-2' onClick={handleClickLogout}>[ Cerrar Sesión ]</button>\r\n            <h2 className='h2-name'>Hola {user.nickName? user.nickName : user.given_name}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav","import React, { useState } from 'react';\r\nimport '../CSS/slideMenu.css';\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SideBar = () => {\r\n\r\n    const [menuOpen, setMenuOpen] = useState(true);\r\n    const user = JSON.parse(localStorage.getItem('user'))\r\n\r\n\r\n\r\n    const handleStateChange = (state) => {\r\n        setMenuOpen(state.isOpen)\r\n    }\r\n    const closeMenuHandler = () => {\r\n        setMenuOpen(!menuOpen)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Menu onStateChange={(state) => handleStateChange(state)} className='userMenu' isOpen={menuOpen} disableCloseOnEsc disableAutoFocus customBurgerIcon={<span className='btn-categories'>MENÚ</span>} >\r\n\r\n                {\r\n\r\n                    user.userId ?\r\n                        <>\r\n                        <p className='text-center'>\r\n                                <Link onClickCapture={closeMenuHandler} className=\"menu-item  bm-item btn-handler\" to={`/dashboard/${user.userId}`}>\r\n                                    INICIO\r\n                            </Link>\r\n                            </p>\r\n\r\n                            <p className='text-center'>\r\n                               <Link onClick={closeMenuHandler} className=\"menu-item  bm-item btn-handler\" to={`/${user.userId}/alltasks`}>\r\n                                MIS TAREAS\r\n                            </Link> \r\n                            </p>\r\n\r\n                            <p className='text-center'>\r\n                                 <Link onClick={closeMenuHandler} className=\"menu-item  bm-item btn-handler text-danger font-weight-bold\" to={`/${user.userId}/pendingTasks`}>\r\n                                PENDIENTES\r\n                            </Link>\r\n                            </p>\r\n                           \r\n                            <p className='text-center'>\r\n                                 <Link onClick={closeMenuHandler} className=\"menu-item  bm-item btn-handler text-success font-weight-bold\" to={`/${user.userId}/completedTasks`}>\r\n                                COMPLETADAS\r\n                            </Link>\r\n                            </p>\r\n\r\n                            <p className='text-center'>\r\n                               <Link onClick={closeMenuHandler} className=\"menu-item  bm-item btn-handler text-warning font-weight-bold\" to={`/${user.userId}/importantTasks`}>\r\n                                IMPORTANTES\r\n                            </Link> \r\n                            </p>\r\n                            \r\n                        \r\n                        </>\r\n                        :\r\n                        <>\r\n                            <p className='text-center'>\r\n                                <Link onClickCapture={closeMenuHandler} className=\"menu-item  bm-item btn-handler\" to={`/dashboard/${user._id}`}>\r\n                                    INICIO\r\n                            </Link>\r\n                            </p>\r\n\r\n                            <p className='text-center'>\r\n                               <Link onClick={closeMenuHandler} className=\"menu-item  bm-item btn-handler\" to={`/${user._id}/alltasks`}>\r\n                                MIS TAREAS\r\n                            </Link> \r\n                            </p>\r\n\r\n                            <p className='text-center'>\r\n                                 <Link onClick={closeMenuHandler} className=\"menu-item  bm-item btn-handler text-danger font-weight-bold\" to={`/${user._id}/pendingTasks`}>\r\n                                PENDIENTES\r\n                            </Link>\r\n                            </p>\r\n                           \r\n                            <p className='text-center'>\r\n                                 <Link onClick={closeMenuHandler} className=\"menu-item  bm-item btn-handler text-success font-weight-bold\" to={`/${user._id}/completedTasks`}>\r\n                                COMPLETADAS\r\n                            </Link>\r\n                            </p>\r\n\r\n                            <p className='text-center'>\r\n                               <Link onClick={closeMenuHandler} className=\"menu-item  bm-item btn-handler text-warning font-weight-bold\" to={`/${user._id}/importantTasks`}>\r\n                                IMPORTANTES\r\n                            </Link> \r\n                            </p>\r\n                            \r\n                    \r\n                            \r\n                        </>\r\n\r\n                }\r\n\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\nexport default SideBar","import React, { useEffect, useState } from 'react';\r\nimport '../CSS/dashboard.css'\r\nimport { getUserTasks, editTask, deleteTask } from '../api/apiCalls';\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst ImportantTasks = (props) => {\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [, setData] = useState('')\r\n    const [userTasks, setUserTasks] = useState([])\r\n    const [activeItem, setActiveItem] = useState('');\r\n    const [error, setError] = useState('')\r\n    const [infoSent, setInfoSent] = useState(false);\r\n    // const [category, setCategory] = useState(['Seleccionar', 'SuperMercado', 'Trabajo', 'Otros']);\r\n    // const categoryMap = category.map(category => category);\r\n    // const handleCategory = () => { setCategory(categoryMap) }\r\n    const [handler, setHandler] = useState(false);\r\n\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const handleTrueOrFalse = () => setHandler(!handler);\r\n\r\n    const showModal = (task) => {\r\n        setIsOpen(true);\r\n        setActiveItem(task)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getDashboard = async () => {\r\n            const result = await getUserTasks(props.match.params.userId);\r\n            setData(result.data);\r\n            setUserTasks(result.data.tasks)\r\n        };\r\n\r\n        getDashboard()\r\n    }, [props.match.params.userId]);\r\n\r\n\r\n    const editTaskHandler = async (data) => {\r\n        try {\r\n            await editTask(props.match.params.userId, activeItem._id, data)\r\n            setInfoSent(!infoSent)\r\n            document.location.reload()\r\n        } catch (error) {\r\n            setError('Lo sentimos, No se puede actualizar esta tarea')\r\n        }\r\n    }\r\n    const deleteTaskHandler = async (data) => {\r\n        try{\r\n            await deleteTask(props.match.params.userId, activeItem._id, data)\r\n\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='bg-component' data-test='app-component'>\r\n            <Link to={`/create-task/${props.match.params.userId}`}><button className='btn-create-task'> + NUEVA TAREA</button></Link>\r\n            <div className='div-tasks'>\r\n                <div className='d-flex justify-content-between mb-3'>\r\n                    <span className='tasks-headers'>TAREAS IMPORTANTES</span>\r\n                    <span className='tasks-headers'>FECHA DE CREACIÓN</span>\r\n                </div>\r\n                {\r\n\r\n                    userTasks.map((task, index) => {\r\n\r\n                        return (\r\n                            <div key={index} className='d-flex justify-content-between'>\r\n\r\n                                {\r\n                                    task.important && !task.completed ?\r\n\r\n                                        <>\r\n                                            <div className='task-name p-2' onClick={() => showModal(task)} >\r\n\r\n                                                <span className=\r\n                                                    {\r\n                                                        task.important && !task.completed?\r\n                                                            'text-warning'\r\n                                                            :\r\n                                                            null\r\n                                                    }>\r\n                                                    {task.name}\r\n                                                </span>\r\n\r\n                                                <span className={\r\n                                                             !task.completed ?\r\n                                                                'text-danger taskBall-1' :\r\n                                                                null\r\n                                                }>\r\n                                                    {task.important && !task.completed ? <i className=\"fas fa-circle ball-state\"></i> : null}\r\n                                                </span>\r\n\r\n                                                <span className={\r\n                                                    task.important ?\r\n                                                        'text-warning' :\r\n                                                        'text-dark'\r\n                                                }>\r\n                                                    {task.important ? <i className=\"fas fa-circle ball-state\"></i> : null}\r\n                                                </span>\r\n                                            </div>\r\n                                            <div>\r\n                                                <span className='date'><Moment format=\"D MMM YYYY\">{task.createdAt}</Moment></span>\r\n                                            </div>\r\n                                        </>\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <div className='vertical-lign'></div>\r\n            </div>\r\n            {\r\n                activeItem ?\r\n                    <Modal show={isOpen} onHide={hideModal}>\r\n                        <Modal.Body>\r\n                            <form onSubmit={handleSubmit(editTaskHandler)}>\r\n                                {errors.name && <span> {errors.name.message ? errors.name.message : 'Este campo es obligatorio'} </span>}\r\n                                <span>{error}</span>\r\n                                <label className='text-info font-weight-bold '>Nombre</label>\r\n                                <input\r\n                                    defaultValue={activeItem.name}\r\n                                    className='form-control'\r\n                                    name='name'\r\n                                    type='text'\r\n                                    placeholder='Nombre'\r\n                                    ref={register}\r\n                                />\r\n                                {errors.category && <span> {errors.category.message ? errors.nickName.message : 'Este campo es obligatorio'} </span>}\r\n\r\n                                <div>\r\n                                    <label className='text-info font-weight-bold '>\r\n                                        Categoría\r\n                                        <input\r\n                                            className='form-control'\r\n                                            type='text'\r\n                                            name='category'\r\n                                            defaultValue={activeItem.category}\r\n                                            ref={register}\r\n                                        />\r\n                                        {/* <select\r\n                                            name='category'\r\n                                            className='form-control'\r\n                                            ref={register({required:true})}\r\n                                            onChange={e => handleCategory(e)}\r\n                                        >\r\n                                            {\r\n                                                categoryMap.map((doc, key) => {\r\n                                                    return <option key={key} value={doc}>{doc}</option>;\r\n                                                })\r\n\r\n                                            }\r\n                                        </select> */}\r\n                                    </label>\r\n                                </div>\r\n                                {errors.description && <span> {errors.description.message ? errors.description.message : 'Este campo es obligatorio'} </span>}\r\n                                <label className='text-info font-weight-bold '>Descripción</label>\r\n                                <input\r\n                                    className='form-control'\r\n                                    name='description'\r\n                                    type='text'\r\n                                    ref={register}\r\n                                    placeholder='Descripción'\r\n                                    defaultValue={activeItem.description}\r\n                                />\r\n\r\n\r\n                                <div className=\"switch-button\">\r\n                                    <label className='text-info font-weight-bold '>Estado de la tarea</label>\r\n                                    <input className=\"switch-button__checkbox\" type=\"checkbox\" id=\"switch-label\" name=\"completed\" onClick={handleTrueOrFalse} ref={register} />\r\n                                    <label htmlFor=\"switch-label\" className=\"switch-button__label\"></label>\r\n                                </div>\r\n                                <div className=\"switch-button\">\r\n                                    <label className='text-info font-weight-bold '>Marcar como importante</label>\r\n                                    <input className=\"switch-button__checkbox\" type=\"checkbox\" id=\"switch-label-2\" name=\"important\" onClick={handleTrueOrFalse} ref={register} />\r\n                                    <label htmlFor=\"switch-label-2\" className=\"switch-button__label\"></label>\r\n                                </div>\r\n                                {\r\n                                    infoSent\r\n                                        ?\r\n                                        <p className='font-weight-bold'>¡Tarea Actualizada!</p>\r\n                                        :\r\n                                        <div className='d-flex justify-content-center mt-4'>\r\n                                            <button className='btn btn-info mr-2'>Actualizar</button>\r\n                                            <button className='btn btn-danger ml-2' onClick={deleteTaskHandler}>Eliminar</button>\r\n                                        </div>\r\n                                }\r\n\r\n                            </form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    :\r\n                    null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImportantTasks","import React from \"react\";\r\nimport { NewTask } from '../Components/NewTask';\r\nimport Dashboard from '../Components/Dashboard';\r\nimport { Home } from '../Components/Home';\r\nimport { Login } from '../Components/Login';\r\nimport { Signup } from '../Components/Signup';\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { AuthState } from \"../auth/authState\";\r\nimport { AnonRoute } from \"./AnonRoute\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport tokenAuth from '../config/token';\r\nimport AllTasks from \"../Components/AllTasks\";\r\nimport PendingTasks from \"../Components/PendingTasks\";\r\nimport CompletedTasks from \"../Components/CompletedTasks\";\r\nimport Nav from '../Components/Nav'\r\nimport SideBar from '../Components/SideBar';\r\nimport ImportantTasks from \"../Components/ImportantTasks\";\r\n\r\nexport function BrowserRoutes() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) tokenAuth(token)\r\n\r\n    return (\r\n        <Router>\r\n            <AuthState>\r\n                <div>\r\n                    {\r\n                        token ? <Nav /> : null\r\n                    }\r\n                    <div>\r\n\r\n                        {\r\n                            token ? <SideBar /> : null\r\n                        }\r\n                        <div>\r\n\r\n                            <Switch>\r\n                                <AnonRoute path=\"/\" exact component={Home} />\r\n                                <AnonRoute path=\"/signup\" component={Signup} />\r\n                                <AnonRoute path=\"/login\" component={Login} />\r\n                                <PrivateRoute path=\"/dashboard/:userId\" component={Dashboard} />\r\n                                <PrivateRoute path='/create-task/:userId' component={NewTask} />\r\n                                <PrivateRoute path='/:userId/alltasks' component={AllTasks} />\r\n                                <PrivateRoute path='/:userId/pendingTasks' component={PendingTasks} />\r\n                                <PrivateRoute path='/:userId/completedTasks' component={CompletedTasks} />\r\n                                <PrivateRoute path='/:userId/importantTasks' component={ImportantTasks} />\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </AuthState>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default BrowserRoutes;\r\n\r\n","import React from 'react';\r\nimport { BrowserRoutes } from './Routes/BrowserRoutes';\r\nimport './CSS/home.css'\r\n\r\nexport const App = () => {\r\n\r\n  return (\r\n   <BrowserRoutes/>\r\n  );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}