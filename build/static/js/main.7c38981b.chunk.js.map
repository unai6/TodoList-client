{"version":3,"sources":["Components/SideBar.js","api/api.js","api/apiCalls.js","Components/NewTask.js","Components/Dashboard.js","Components/Home.js","auth/authContext.js","Components/Login.js","Components/Signup.js","auth/authReducer.js","constants/index.js","auth/authState.js","Routes/AnonRoute.jsx","Routes/PrivateRoute.jsx","config/token.js","Components/AllTasks.js","Routes/BrowserRoutes.js","Components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["SideBar","history","useHistory","useState","menuOpen","setMenuOpen","user","JSON","parse","localStorage","getItem","closeMenuHandler","onStateChange","state","isOpen","handleStateChange","className","disableCloseOnEsc","disableAutoFocus","customBurgerIcon","onClick","push","userId","document","location","reload","onClickCapture","href","axiosInstance","axios","create","baseURL","process","signup","data","post","createTask","id","editTask","taskId","NewTask","useForm","register","handleSubmit","errors","setisLoading","error","setError","category","setCategory","categoryMap","map","onSubmit","a","name","message","type","placeholder","ref","required","nickName","onChange","e","doc","key","value","description","Dashboard","props","setIsOpen","setData","userTasks","setUserTasks","activeItem","setActiveItem","infoSent","setInfoSent","handler","setHandler","handleTrueOrFalse","useEffect","match","params","get","result","tasks","getDashboard","EditProfile","_id","data-test","to","task","index","showModal","completed","important","importantes","format","createdAt","Modal","show","onHide","Body","defaultValue","htmlFor","Home","currentUserId","authContext","createContext","Login","authenticate","useContext","AuthContext","Signup","isLoading","password","action","setItem","payload","token","stringify","loading","removeItem","AuthState","initialState","useReducer","AuthReducer","dispatch","Provider","login","then","res","catch","err","children","AnonRoute","Component","component","rest","render","PrivateRoute","tokenAuth","defaults","headers","common","AllTasks","BrowserRoutes","path","exact","Nav","src","alt","App","renderSideBar","setRenderSideBar","style","display","flexDirection","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","StrictMode","getElementById","URL","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7c38981b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport '../CSS/slideMenu.css';\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport { useHistory  } from \"react-router-dom\";\r\n\r\nconst SideBar = () => {\r\n    const history = useHistory()\r\n    const [menuOpen, setMenuOpen] = useState(true);\r\n    const user = JSON.parse(localStorage.getItem('user'))\r\n    \r\n\r\n\r\n    const handleStateChange = (state) => {\r\n        setMenuOpen(state.isOpen)\r\n      }\r\n    const closeMenuHandler = () => {\r\n        setMenuOpen(!menuOpen)\r\n    }\r\n\r\n    const handleHome = () => {\r\n        history.push(`/dashboard/${user.userId}`);\r\n        document.location.reload();\r\n    }\r\n    return (\r\n        <div>\r\n            <Menu onStateChange={(state) => handleStateChange(state)} className='userMenu' isOpen={menuOpen} disableCloseOnEsc disableAutoFocus customBurgerIcon={<span className='btn-categories'>CATEGORÍAS</span>} >\r\n                \r\n                <button onClick = {handleHome} onClickCapture={closeMenuHandler} className=\"menu-item  bm-item btn-handler\">\r\n                    INICIO\r\n                </button>\r\n               <button onClick={closeMenuHandler} className=\"menu-item  bm-item btn-handler\">\r\n               <a href={`/${user.userId}/alltasks`}> MIS TAREAS</a>\r\n                </button>\r\n            \r\n                <button onClick={closeMenuHandler} className=\"menu-item  bm-item btn-handler text-danger font-weight-bold\">\r\n                    PENDIENTES\r\n                </button>\r\n                <button onClick={closeMenuHandler} className=\"menu-item  bm-item btn-handler text-success font-weight-bold\">\r\n                    COMPLETADAS\r\n                        </button>\r\n                <button onClick={closeMenuHandler} className=\"menu-item  bm-item btn-handler\">\r\n                    SUPERMERCADO\r\n                        </button>\r\n                <button onClick={closeMenuHandler} className=\"menu-item  bm-item btn-handler text-info font-weight-bold\">\r\n                    IMPORTANTES\r\n                </button>\r\n\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\nexport default SideBar","import axios from 'axios';\r\n\r\nexport const axiosInstance = axios.create({\r\n\tbaseURL:`${process.env.REACT_APP_API_URI}`,\r\n\r\n});\r\n\r\n// axiosInstance.interceptors.response.use(response => {\r\n\r\n// \treturn response.data;\r\n// }, error => {\r\n// \treturn Promise.reject(error);\r\n// });","import {axiosInstance} from './api'\r\n\r\n//userCalls\r\n\r\nexport const signup = (data) => {\r\n    return axiosInstance.post('/signup', data);\r\n};\r\n\r\nexport const login = (data) => {\r\n    return axiosInstance.post('/login', data);\r\n};\r\n\r\nexport const getDashboard = (userId, token) => {\r\n    return axiosInstance.get(`/dashboard/${userId}`, { headers: { Authorization: token }});\r\n};\r\n\r\nexport const getUserData = (userId) => {\r\n    return axiosInstance.get(`/userinfo/${userId}`)\r\n}\r\n\r\nexport const getUserTasks = (userId) => {\r\n    return axiosInstance.get(`/${userId}/alltasks`)\r\n}\r\n\r\n//TaskCalls\r\n\r\nexport const createTask = (id, data) => {\r\n    return axiosInstance.post(`/create-task/${id}`, data);\r\n};\r\n\r\nexport const deleteTask = (userId, taskId, data) => {\r\n    return axiosInstance.post(`/delete-task/${userId}/${taskId}`, data);\r\n};\r\n\r\nexport const editTask = (userId, taskId, data) => {\r\n    return axiosInstance.post(`/edit-task/${userId}/${taskId}`, data)\r\n}","import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../CSS/create-task.css';\r\nimport { createTask } from '../api/apiCalls';\r\n// import Select from 'react-select';\r\n\r\nexport const NewTask = () => {\r\n    const history = useHistory();\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [, setisLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n    const [category, setCategory] = useState(['Seleccionar', 'SuperMercado', 'Trabajo', 'Otros']);\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const categoryMap = category.map(category => category);\r\n\r\n    const handleCategory = () => {setCategory(categoryMap)}\r\n\r\n    const onSubmit = async data => {\r\n        try {\r\n            await createTask(user.userId, data);\r\n            setisLoading(false);\r\n            history.push(`/dashboard/${user.userId}`)\r\n\r\n        } catch (error) {\r\n            setError('ya existe un usuario con ese avatar')\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='bg-component'>\r\n            <div className='div-createTask'>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    {errors.name && <span> {errors.name.message ? errors.name.message : 'Este campo es obligatorio'} </span>}\r\n                    <span>{error}</span>\r\n                    <input\r\n                        className='form-control'\r\n                        name='name'\r\n                        type='text'\r\n                        placeholder='Nombre'\r\n                        ref={register({ required: true })}\r\n                    />\r\n                        {errors.category && <span> {errors.category.message ? errors.nickName.message : 'Este campo es obligatorio'} </span>}\r\n          \r\n                    <div>\r\n                        <label>\r\n                            Categoría\r\n                            <select\r\n                                name='category'\r\n                                className='form-control'\r\n                                ref={register({ required: true })}\r\n                                onChange={e => handleCategory(e)}\r\n                            >\r\n                                {\r\n                                    categoryMap.map((doc, key) => {\r\n                                        return <option key={key} value={doc}>{doc}</option>;\r\n                                    })\r\n\r\n                                }\r\n                            </select>\r\n                        </label>\r\n                    </div>\r\n                    {errors.description && <span> {errors.description.message ? errors.description.message : 'Este campo es obligatorio'} </span>}\r\n                    <input\r\n                        className='form-control'\r\n                        name='description'\r\n                        type='text'\r\n                        ref={register({ required: true })}\r\n                        placeholder='Descripción'\r\n                    />\r\n\r\n                    <button>Crear tarea</button>\r\n                </form>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport '../CSS/dashboard.css'\r\nimport { getUserData, editTask } from '../api/apiCalls';\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [, setData] = useState('')\r\n    const [userTasks, setUserTasks] = useState([])\r\n    const [activeItem, setActiveItem] = useState('');\r\n    const [error, setError] = useState('')\r\n    const [infoSent, setInfoSent] = useState(false);\r\n    // const [category, setCategory] = useState(['Seleccionar', 'SuperMercado', 'Trabajo', 'Otros']);\r\n    // const categoryMap = category.map(category => category);\r\n    // const handleCategory = () => { setCategory(categoryMap) }\r\n    const [handler, setHandler] = useState(false);\r\n\r\n    const hideModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const handleTrueOrFalse = () => setHandler(!handler);\r\n\r\n    const showModal = (task) => {\r\n        setIsOpen(true);\r\n        setActiveItem(task)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getDashboard = async () => {\r\n            const result = await getUserData(props.match.params.userId);\r\n            setData(result.data);\r\n            setUserTasks(result.data.tasks)\r\n        };\r\n\r\n        getDashboard()\r\n    }, [props.match.params.userId]);\r\n\r\n    const EditProfile = async (data) => {\r\n        try {\r\n            await editTask(props.match.params.userId, activeItem._id, data)\r\n            setInfoSent(!infoSent)\r\n            document.location.reload()\r\n        } catch (error) {\r\n            setError('Lo sentimos, No se puede actualizar esta tarea')\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='bg-component' data-test='app-component'>\r\n            <Link to={`/create-task/${props.match.params.userId}`}><button className='btn-create-task'> + NUEVA TAREA</button></Link>\r\n            <div className='div-tasks'>\r\n                <div className='d-flex justify-content-between mb-3'>\r\n                    <span className='tasks-headers'>ÚLTIMAS TAREAS</span>\r\n                    <span className='tasks-headers'>FECHA DE CREACIÓN</span>\r\n                </div>\r\n                {\r\n\r\n                    userTasks.map((task, index) => {\r\n\r\n                        return (\r\n                            <div key={index} className='d-flex justify-content-between'>\r\n                                <div className='task-name p-2' onClick={() => showModal(task)} > {\r\n                                    task.completed ?\r\n                                        <del>\r\n\r\n                                            <span className=\r\n                                                {\r\n                                                    task.completed === false ?\r\n                                                        'text-danger' :\r\n                                                        task.completed === true ?\r\n                                                            'text-success' :\r\n                                                            (task.category === 'Trabajo' || task.category === 'Supermercado') && task.important === true && task.completed === false ?\r\n                                                                'text-info' :\r\n                                                                task.category && !task.important === true && task.completed === false === 'Supermercado' ?\r\n                                                                    'text-dark' :\r\n                                                                    null\r\n                                                }>\r\n                                                {task.name}\r\n                                            </span>\r\n                                        </del>\r\n                                        :\r\n                                        <span className=\r\n                                            {\r\n                                                task.completed === false ?\r\n                                                    'text-danger' :\r\n                                                    task.completed === true ?\r\n                                                        'text-success' :\r\n                                                        (task.category === 'Trabajo' || task.category === 'Supermercado') && !task.important === true ?\r\n                                                            'text-info' :\r\n                                                            task.category && !task.importantes === 'Supermercado' ?\r\n                                                                'text-dark' :\r\n                                                                null\r\n                                            }>\r\n                                            {task.name}\r\n                                        </span>\r\n                                }\r\n                                    <span className={\r\n                                        task.completed === false ?\r\n                                            'text-danger taskBall-1' :\r\n                                            task.completed === true ?\r\n                                                'text-success taskBall-1' :\r\n                                                (task.category === 'Trabajo' || task.category === 'Supermercado') && !task.important === true ?\r\n                                                    'text-info taskBall-1' :\r\n                                                    task.category && !task.importantes === 'Supermercado' ?\r\n                                                        'text-dark taskBall-1' :\r\n                                                        null\r\n                                    }>\r\n                                        {<i className=\"fas fa-circle ball-state\"></i>}\r\n                                    </span>\r\n                                    \r\n                                    <span className={\r\n                                        task.important ?\r\n                                        'text-info' :\r\n                                        'text-dark'\r\n                                    }>\r\n                                    {<i className=\"fas fa-circle ball-state\"></i>}\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <span className='date'><Moment format=\"D MMM YYYY\">{task.createdAt}</Moment></span>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <div className='vertical-lign'></div>\r\n            </div>\r\n            {\r\n                activeItem ?\r\n                    <Modal show={isOpen} onHide={hideModal}>\r\n                        <Modal.Body>\r\n                            <form onSubmit={handleSubmit(EditProfile)}>\r\n                                {errors.name && <span> {errors.name.message ? errors.name.message : 'Este campo es obligatorio'} </span>}\r\n                                <span>{error}</span>\r\n                                <label>Nombre</label>\r\n                                <input\r\n                                    defaultValue={activeItem.name}\r\n                                    className='form-control'\r\n                                    name='name'\r\n                                    type='text'\r\n                                    placeholder='Nombre'\r\n                                    ref={register}\r\n                                />\r\n                                {errors.category && <span> {errors.category.message ? errors.nickName.message : 'Este campo es obligatorio'} </span>}\r\n\r\n                                <div>\r\n                                    <label>\r\n                                        Categoría\r\n                                        <input\r\n                                            className='form-control'\r\n                                            type='text'\r\n                                            name='category'\r\n                                            defaultValue={activeItem.category}\r\n                                            ref={register}\r\n                                        />\r\n                                        {/* <select\r\n                                            name='category'\r\n                                            className='form-control'\r\n                                            ref={register({required:true})}\r\n                                            onChange={e => handleCategory(e)}\r\n                                        >\r\n                                            {\r\n                                                categoryMap.map((doc, key) => {\r\n                                                    return <option key={key} value={doc}>{doc}</option>;\r\n                                                })\r\n\r\n                                            }\r\n                                        </select> */}\r\n                                    </label>\r\n                                </div>\r\n                                {errors.description && <span> {errors.description.message ? errors.description.message : 'Este campo es obligatorio'} </span>}\r\n                                <label>Descripción</label>\r\n                                <input\r\n                                    className='form-control'\r\n                                    name='description'\r\n                                    type='text'\r\n                                    ref={register}\r\n                                    placeholder='Descripción'\r\n                                    defaultValue={activeItem.description}\r\n                                />\r\n\r\n\r\n                                <div className=\"switch-button\">\r\n                                    <label>Estado de la tarea</label>\r\n                                    <input className=\"switch-button__checkbox\" type=\"checkbox\" id=\"switch-label\" name=\"completed\" onClick={handleTrueOrFalse} ref={register} />\r\n                                    <label htmlFor=\"switch-label\" className=\"switch-button__label\"></label>\r\n                                </div>\r\n                                <div className=\"switch-button\">\r\n                                    <label>Marcar como importante</label>\r\n                                    <input className=\"switch-button__checkbox\" type=\"checkbox\" id=\"switch-label-2\" name=\"important\" onClick={handleTrueOrFalse} ref={register} />\r\n                                    <label htmlFor=\"switch-label-2\" className=\"switch-button__label\"></label>\r\n                                </div>\r\n                                {\r\n                                infoSent \r\n                                ?\r\n                                    <p>¡Tarea Actualizada!</p>\r\n                                :\r\n                                    <button>Actualizar</button>\r\n                                }\r\n                            </form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    :\r\n                    null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React from 'react'\r\nimport '../CSS/home.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const Home = () => {\r\n    \r\n\r\n    let user = localStorage.getItem('user');\r\n    let currentUserId;\r\n\r\n    if (user !== null) {\r\n      currentUserId = JSON.parse(user)\r\n      \r\n    }\r\n\r\n    return (\r\n        <div className='background-home'>\r\n        <Link to='/signup' ><button>Registrarse</button></Link>\r\n            <>\r\n        {\r\n            user ?\r\n\r\n        <Link to={`/dashboard/${currentUserId.userId}`} ><button>Ir a mi escritorio</button> </Link>\r\n        \r\n        :\r\n        <Link to='/login' ><button>Iniciar Sesión</button> </Link>\r\n        \r\n        }\r\n        </>\r\n\r\n        </div>\r\n    )\r\n}\r\n","  \r\nimport { createContext } from 'react';\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;","import React, { useContext } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport AuthContext from '../auth/authContext';\r\n\r\nexport const Login = () => {\r\n\r\n    const { register, handleSubmit } = useForm();\r\n    const authContext = useContext(AuthContext);\r\n    const { authenticate } = authContext;\r\n    // const [isLoading, setisLoading] = useState(true)\r\n    // const [error, setError] = useState(false)\r\n\r\n    const onSubmit = data => {\r\n        authenticate(data)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <input\r\n                    className='form-control'\r\n                    name='nickName'\r\n                    type='text'\r\n                    placeholder='NickName'\r\n                    ref={register({ required: true })}\r\n                />\r\n                <input\r\n                    className='form-control'\r\n                    name='password'\r\n                    type='password'\r\n                    placeholder='password'\r\n                    ref={register({ required: true })}\r\n                />\r\n                <input\r\n                    type='checkbox'\r\n                    name='remember'\r\n                    ref={register}\r\n                />\r\n                <button>Acceder en mi cuenta</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { signup } from '../api/apiCalls';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const Signup = () => {\r\n    const history = useHistory();\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [isLoading, setisLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n\r\n    const onSubmit = async data => {\r\n        try {\r\n            await signup(data);\r\n            setisLoading(false);\r\n            history.push('/login')\r\n\r\n        } catch (error) {\r\n            setError('ya existe un usuario con ese avatar')\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                {errors.name && <span> {errors.name.message ? errors.name.message : 'Este campo es obligatorio'} </span>}\r\n                <span>{error}</span>\r\n                <input\r\n                    className='form-control'\r\n                    name='name'\r\n                    type='text'\r\n                    placeholder='Nombre'\r\n                    ref={register({ required: true })}\r\n                />\r\n                {errors.nickName && <span> {errors.nickName.message ? errors.nickName.message : 'Este campo es obligatorio'} </span>}\r\n                <input\r\n                    className='form-control'\r\n                    name='nickName'\r\n                    type='text'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Avatar'\r\n                />\r\n                {errors.password && <span> {errors.password.message ? errors.password.message : 'Este campo es obligatorio'} </span>}\r\n                <input\r\n                    className='form-control'\r\n                    name='password'\r\n                    type='text'\r\n                    ref={register({ required: true })}\r\n                    placeholder='Contraseña'\r\n                />\r\n                <input\r\n                    type='checkbox'\r\n                    name='remember'\r\n                    ref={register}\r\n                />\r\n                {\r\n                    isLoading ?\r\n                        <button>Registrarse</button>\r\n                        :\r\n                        <p>Gracias por registrate</p>\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { LOGIN_SUCCESS, LOGIN_ERROR} from '../constants/index';\r\n\r\nexport default (state, action) => {\r\n\tswitch(action.type) {\r\n        case LOGIN_SUCCESS:\r\n  \r\n\t\t\tlocalStorage.setItem('token', action.payload.data.token);\r\n            localStorage.setItem('user', JSON.stringify(action.payload.data.user));\r\n        \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: action.payload.token,\r\n                user: action.payload.user,\r\n\t\t\t\tloading: false\r\n            }\t\t\r\n\r\n\t\tcase LOGIN_ERROR:\r\n\t\t\tlocalStorage.removeItem('token');\r\n\t\t\tlocalStorage.removeItem('user');\r\n            \r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\ttoken: null,\r\n                    user: null,\r\n\t\t\t\t\tmessage: action.payload, \r\n                    loading: false\r\n\t\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n} \r\n\r\n    \r\n\r\n\r\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useReducer } from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\n\r\nimport {login} from '../api/apiCalls';\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nimport { LOGIN_SUCCESS, LOGIN_ERROR } from '../constants/index';\r\n\r\nexport const AuthState = props => {\r\n  const initialState = {\r\n    user: localStorage.getItem(\"user\"),\r\n    token: localStorage.getItem(\"token\"),\r\n    loading: true\r\n   }\r\n\r\n  const history = useHistory();\r\n  const [ state, dispatch ] = useReducer(AuthReducer, initialState);\r\n\r\n  const authenticate = (data) => {\r\n    login(data)\r\n      .then(res=> {\r\n       \r\n        dispatch({ type: LOGIN_SUCCESS, payload: res })\r\n        history.push(`/dashboard/${res.data.user.userId}`);\r\n        document.location.reload()\r\n      })\r\n      .catch(err => { \r\n        dispatch({ type: LOGIN_ERROR, payload: err }) \r\n      })\r\n  }\r\n\r\n  return(\r\n    <AuthContext.Provider\r\n      value={{ \r\n        token: state.token,\r\n        user: state.user,\r\n        loading: state.loading,\r\n        authenticate,\r\n  \r\n      }}\r\n    >\r\n    {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthContext from '../auth/authContext';\r\n\r\nexport const AnonRoute = (props) => { \r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { component: Component, ...rest } = props; \r\n\r\n  return (\r\n    <>\r\n      {!authContext.token ? ( \r\n        <Route render={(props) => <Component {...props} />} {...rest} /> \r\n      ) : (\r\n        <Redirect to=\"/\" /> \r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = props => {\r\n\r\n  \r\n  const { component: Component, ...rest } = props;\r\n  const token = localStorage.getItem('token');\r\n\r\n  return (\r\n    <>\r\n      { token ? (\r\n\r\n        <Route render={props => <Component {...props} />} {...rest} />\r\n      ) : (\r\n        <Redirect to=\"/\" /> \r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import {axiosInstance} from '../api/api';\r\n\r\nconst tokenAuth = token => {\r\n    if(token) {\r\n        axiosInstance.defaults.headers.common['Authorization'] =  token;\r\n    } else {\r\n        delete axiosInstance.defaults.headers.common['Authorization'] \r\n    }\r\n}\r\n\r\nexport default tokenAuth;","import React, { useEffect, useState } from 'react';\r\nimport '../CSS/dashboard.css'\r\nimport { getUserTasks } from '../api/apiCalls';\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment';\r\n\r\n\r\nconst AllTasks = (props) => {\r\n\r\n\r\n    const [, setData] = useState('')\r\n    const [userTasks, setUserTasks] = useState([])\r\n  \r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getDashboard = async () => {\r\n            const result = await getUserTasks(props.match.params.userId);\r\n            setData(result.data);\r\n            setUserTasks(result.data.tasks)\r\n        };\r\n\r\n        getDashboard()\r\n    }, [props.match.params.userId]);\r\n\r\n\r\n    return (\r\n        <div className='bg-component' data-test='app-component'>\r\n            <Link to={`/create-task/${props.match.params.userId}`}><button className='btn-create-task'> + NUEVA TAREA</button></Link>\r\n            <div className='div-tasks'>\r\n                <div className='d-flex justify-content-between mb-3'>\r\n                    <span className='tasks-headers'>MIS TAREAS</span>\r\n                    <span className='tasks-headers'>FECHA DE CREACIÓN</span>\r\n                </div>\r\n                {\r\n\r\n                    userTasks.map((task, index) => {\r\n\r\n                        return (\r\n                            <div key={index} className='d-flex justify-content-between'>\r\n                                <div className='task-name p-2'> {\r\n                                    task.completed ?\r\n                                        <del>\r\n\r\n                                            <span className=\r\n                                                {\r\n                                                    task.completed === false ?\r\n                                                        'text-danger' :\r\n                                                        task.completed === true ?\r\n                                                            'text-success' :\r\n                                                            (task.category === 'Trabajo' || task.category === 'Supermercado') && task.important === true && task.completed === false ?\r\n                                                                'text-info' :\r\n                                                                task.category && !task.important === true && task.completed === false === 'Supermercado' ?\r\n                                                                    'text-dark' :\r\n                                                                    null\r\n                                                }>\r\n                                                {task.name}\r\n                                            </span>\r\n                                        </del>\r\n                                        :\r\n                                        <span className=\r\n                                            {\r\n                                                task.completed === false ?\r\n                                                    'text-danger' :\r\n                                                    task.completed === true ?\r\n                                                        'text-success' :\r\n                                                        (task.category === 'Trabajo' || task.category === 'Supermercado') && !task.important === true ?\r\n                                                            'text-info' :\r\n                                                            task.category && !task.importantes === 'Supermercado' ?\r\n                                                                'text-dark' :\r\n                                                                null\r\n                                            }>\r\n                                            {task.name}\r\n                                        </span>\r\n                                }\r\n                                    <span className={\r\n                                        task.completed === false ?\r\n                                            'text-danger taskBall-1' :\r\n                                            task.completed === true ?\r\n                                                'text-success taskBall-1' :\r\n                                                (task.category === 'Trabajo' || task.category === 'Supermercado') && !task.important === true ?\r\n                                                    'text-info taskBall-1' :\r\n                                                    task.category && !task.importantes === 'Supermercado' ?\r\n                                                        'text-dark taskBall-1' :\r\n                                                        null\r\n                                    }>\r\n                                        {<i className=\"fas fa-circle ball-state\"></i>}\r\n                                    </span>\r\n                                    \r\n                                    <span className={\r\n                                        task.important ?\r\n                                        'text-info' :\r\n                                        'text-dark'\r\n                                    }>\r\n                                    {<i className=\"fas fa-circle ball-state\"></i>}\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <span className='date'><Moment format=\"D MMM YYYY\">{task.createdAt}</Moment></span>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <div className='vertical-lign'></div>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllTasks","import React from \"react\";\r\nimport { NewTask } from '../Components/NewTask';\r\nimport Dashboard from '../Components/Dashboard';\r\nimport { Home } from '../Components/Home';\r\nimport { Login } from '../Components/Login';\r\nimport { Signup } from '../Components/Signup';\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { AuthState } from \"../auth/authState\";\r\nimport { AnonRoute } from \"./AnonRoute\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport tokenAuth from '../config/token';\r\nimport AllTasks from \"../Components/AllTasks\";\r\n\r\n\r\nexport function BrowserRoutes(props) {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (token) tokenAuth(token)\r\n\r\n    return (\r\n        <Router>\r\n            <AuthState>\r\n                <Switch>              \r\n                    <AnonRoute path=\"/\" exact component={Home} />\r\n                    <AnonRoute path=\"/signup\" component={Signup} />\r\n                    <AnonRoute path=\"/login\" component={Login} />\r\n                    <PrivateRoute path=\"/dashboard/:userId\" component={Dashboard} />\r\n                    <PrivateRoute path='/create-task/:userId' component={NewTask} />\r\n                    <PrivateRoute path='/:userId/alltasks' component={AllTasks}/>\r\n                </Switch>\r\n            </AuthState>\r\n        </Router>\r\n    )\r\n}\r\n\r\n\r\nexport default BrowserRoutes;\r\n\r\n\r\n\r\n\r\n\r\n// import SideBar from '../Components/SideBar'\r\n\r\n// const routes = [\r\n\r\n//     {\r\n//         path: \"/\",\r\n//         component: Home,\r\n//         exact: true,\r\n\r\n//     },\r\n\r\n//     {\r\n//         path: \"/login\",\r\n//         component: Login,\r\n//         exact: true,\r\n\r\n//     },\r\n//     {\r\n//         path: \"/signup\",\r\n//         component: Signup,\r\n//         exact: true,\r\n\r\n//     },\r\n//     {\r\n//         path: \"/dashboard/:userId\",\r\n//         component: Dashboard,\r\n//         exact: true,\r\n\r\n//     },\r\n//     {\r\n//         path: \"/create-task/:userId\",\r\n//         component: NewTask,\r\n//         exact: true,\r\n\r\n//     },\r\n// ];\r\n\r\n// export default routes","import React from 'react';\r\nimport '../CSS/dashboard.css'\r\nimport { Redirect  } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n\r\n   \r\n    const user= JSON.parse(localStorage.getItem('user'))\r\n\r\n\r\n    const handleClickLogout = () => {\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n        document.location.reload()\r\n        return <Redirect to={'/'} />\r\n\r\n    }\r\n\r\n    return (\r\n        <div data-test='app-component'>\r\n            <button className='btn-logout d-block ml-auto mb-4 mr-2 mt-2' onClick={handleClickLogout}>[ Cerrar Sesión ]</button>\r\n            <div>\r\n                <img className='logo' src='/list-2389219_640-removebg-preview.png' alt='pic' data-test='image-logo' />\r\n                <h2 className='h2-name'>Hola {user.nickName}</h2>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav","import React, { useState, useEffect } from 'react';\r\nimport SideBar from './Components/SideBar';\r\nimport { BrowserRoutes } from './Routes/BrowserRoutes';\r\nimport Nav from './Components/Nav'\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nexport const App = (props) => {\r\n  const [token] = useState(localStorage.getItem('token'));\r\n  const [renderSideBar, setRenderSideBar] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      setRenderSideBar(true)\r\n    }\r\n\r\n  }, [token, renderSideBar])\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <div style={{ display: \"flex\", flexDirection: 'column' }} >\r\n        {\r\n          token ? <Nav /> : null\r\n        }\r\n        <div >\r\n          {\r\n            token ? <SideBar /> : null\r\n          }\r\n          <div>\r\n            <BrowserRoutes />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}