{"version":3,"sources":["Components/SideBar.js","api/api.js","api/apiCalls.js","Components/Dashboard.js","Components/NewTask.js","Components/Home.js","auth/authContext.js","auth/authReducer.js","constants/index.js","auth/authState.js","Routes/AnonRoute.jsx","Routes/PrivateRoute.jsx","Components/Login.js","Components/Signup.js","config/token.js","App.js","serviceWorker.js","index.js"],"names":["SideBar","props","useState","menuOpen","setMenuOpen","closeMenuHandler","className","onClick","to","href","axiosInstance","axios","create","baseURL","process","withCredentials","signup","data","post","login","Dashboard","history","useHistory","userTasks","useEffect","a","userId","match","params","get","result","console","log","getUserData","tasks","data-test","src","alt","nickName","map","task","index","key","name","localStorage","removeItem","push","NewTask","Home","currentUserId","token","getItem","JSON","parse","authContext","createContext","state","action","type","setItem","payload","stringify","user","loading","message","AuthState","initialState","useReducer","AuthReducer","dispatch","authenticate","status","Provider","value","isVerified","isCompleted","children","AnonRoute","useContext","AuthContext","Component","component","rest","render","PrivateRoute","Login","useForm","register","handleSubmit","onSubmit","ref","Signup","errors","isLoading","setisLoading","error","setError","placeholder","required","password","tokenAuth","defaults","headers","common","App","exact","path","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"kVAuEgBA,EAlEA,SAACC,GAAW,IAAD,EAESC,oBAAS,GAFlB,mBAEhBC,EAFgB,KAENC,EAFM,KAOjBC,EAAmB,WACrBD,GAAY,IAGhB,OACI,yBAAKE,UAAU,gBACf,yBAAKA,UAAU,eACX,4BAAQA,UAAU,iBAAiBC,QAVjB,WACtBH,GAAaD,KAST,kBACA,kBAAC,IAAD,CAAMK,GAAG,iBACT,4BAAQF,UAAU,kBAAlB,oBAMIH,EAEI,yBAAKG,UAAU,wBACX,4BAAQA,UAAU,aAAaC,QAASF,GAAkB,uBAAGC,UAAU,oCAExE,4BAAQC,QAASF,EAAkBC,UAAU,sDACxC,uBAAGA,UAAU,gBADlB,IACqC,uBAAGA,UAAU,UAAUG,KAAK,SAA5B,eAIpC,4BAAQF,QAASF,EAAkBC,UAAU,sDACzC,uBAAGA,UAAU,wBADjB,IAC4C,uBAAGA,UAAU,UAAUG,KAAK,UAA5B,gBAE5C,4BAAQF,QAASF,EAAkBC,UAAU,gEACzC,uBAAGA,UAAU,uBADjB,IAC2C,uBAAGA,UAAU,UAAUG,KAAK,cAA5B,YAE3C,4BAAQF,QAASF,EAAkBC,UAAU,sDACzC,uBAAGA,UAAU,8BADjB,IACkD,uBAAGA,UAAU,UAAUG,KAAK,YAA5B,iBAElD,4BAAQF,QAASF,EAAkBC,UAAU,sDACzC,uBAAGA,UAAU,8BADjB,IACkD,uBAAGA,UAAU,UAAUG,KAAK,YAA5B,iBAItD,yBAAKH,UAAU,uBACX,4BAAQA,UAAU,aAAaC,QAASF,GAAkB,uBAAGC,UAAU,oCACvE,4BAAQC,QAASF,EAAkBC,UAAU,sDAA7C,QAGA,4BAAQC,QAASF,EAAkBC,UAAU,sDAA7C,SAGA,4BAAQC,QAASF,EAAkBC,UAAU,gEAA7C,aAGA,4BAAQC,QAASF,EAAkBC,UAAU,sDAA7C,c,gBC5DXI,E,OAAgBC,EAAMC,OAAO,CACzCC,QAAQ,GAAD,OAAIC,2CACXC,iBAAiB,ICALC,EAAS,SAACC,GACnB,OAAOP,EAAcQ,KAAK,UAAWD,IAG5BE,EAAQ,SAACF,GAClB,OAAOP,EAAcQ,KAAK,SAAUD,I,OCgDzBG,EAlDG,SAACnB,GAEhB,IAAMoB,EAAUC,cAFU,EAGFpB,mBAAS,IAHP,mBAGnBe,EAHmB,aAIQf,mBAAS,KAJjB,mBAInBqB,EAJmB,UAMzBC,qBAAU,YACW,uCAAG,4BAAAC,EAAA,sEDGCC,ECFgBzB,EAAM0B,MAAMC,OAAOF,ODGrDhB,EAAcmB,IAAd,qBAAgCH,ICJf,OACZI,EADY,OAElBC,QAAQC,IAAIF,GAFM,iCDGA,IAACJ,ICHD,OAAH,qDAKjBO,KACD,CAAChC,EAAM0B,MAAMC,OAAOF,SAEvBK,QAAQC,IAAIf,EAAKiB,OASjB,OACI,yBAAKC,YAAU,iBACX,6BACI,yBAAK7B,UAAU,OAAO8B,IAAI,yCAAyCC,IAAI,MAAMF,YAAU,eAC3E,wBAAI7B,UAAU,WAAd,QAA8BW,EAAKqB,UACnC,uBAAGhC,UAAU,iBAAb,oCACA,iCACIiB,EAAUgB,KAAI,SAACC,EAAMC,GACjB,OACI,yBAAKC,IAAKD,GACV,2BAAID,EAAKG,WAOrB,kBAAC,EAAD,iBAAa1C,EAAb,CAAoBkC,YAAU,wBAIlD,4BAAQ5B,QA7Bc,WDVnBG,EAAcQ,KAAK,UAAW,ICYjC0B,aAAaC,WAAW,QACxBD,aAAaC,WAAW,SACxBxB,EAAQyB,KAAK,OAyBb,sBCjDKC,EAAU,WACnB,OACI,6BACI,+CACA,kBAAC,EAAD,CAASZ,YAAU,wBCHlBa,G,MAAO,WAGhB,IACIC,EADAC,EAAQN,aAAaO,QAAQ,QAGnB,OAAVD,IAEFD,EAD0BG,KAAKC,MAAMH,GACDxB,QAItC,OACI,yBAAKpB,UAAU,mBACf,kBAAC,IAAD,CAAME,GAAG,WAAW,gDAChB,oCAEA0C,EAEJ,kBAAC,IAAD,CAAM1C,GAAE,qBAAgByC,IAAkB,sDAA1C,KAGA,kBAAC,IAAD,CAAMzC,GAAG,UAAU,qDAAnB,SCrBO8C,EAFKC,0B,QCDL,WAACC,EAAOC,GACtB,OAAOA,EAAOC,MAEb,ICL2B,gBDS1B,OAHAd,aAAae,QAAQ,QAASF,EAAOG,QAAQV,OACpCN,aAAae,QAAQ,OAAQP,KAAKS,UAAUJ,EAAOG,QAAQE,OAE7D,2BACHN,GADJ,IAECN,MAAOO,EAAOG,QAAQV,MACVY,KAAML,EAAOG,QAAQE,KACjCC,SAAS,IAGX,ICfyB,cDmBvB,OAHDnB,aAAaC,WAAW,SACxBD,aAAaC,WAAW,QAEhB,2BACHW,GADJ,IAECN,MAAO,KACQY,KAAM,KACrBE,QAASP,EAAOG,QACDG,SAAS,IAE3B,QACC,OAAOP,IEnBGS,EAAY,SAAAhE,GAEvB,IAAMiE,EAAe,CACnBJ,KAAMlB,aAAaO,QAAQ,QAC3BD,MAAON,aAAaO,QAAQ,SAC5BY,SAAS,GALqB,EAONI,qBAAWC,EAAaF,GAPlB,mBAOzBV,EAPyB,KAOlBa,EAPkB,KAQ1BhD,EAAUC,cAGVgD,EAAY,uCAAG,WAAOrD,GAAP,eAAAQ,EAAA,+EAEIN,EAAMF,GAFV,OAIK,OAFhBa,EAFW,QAINyC,QACTF,EAAS,CAACX,KDzBW,gBCyBSE,QAAS9B,EAAOb,OAE7CI,EAAQyB,KAAR,qBAA2BhB,EAAOb,KAAK6C,KAAKpC,WAG1C2C,EAAS,CAAEX,KD7BK,cC6BcE,QAAS9B,EAAOyC,SAC9ClD,EAAQyB,KAAR,WAXY,gDAebuB,EAAS,CAACX,KDlCO,cCkCWE,QAAQ,EAAD,KAftB,yDAAH,sDAwBlB,OACE,kBAAC,EAAYY,SAAb,CACEC,MAAO,CACLvB,MAAOM,EAAMN,MACbY,KAAMN,EAAMM,KACZY,WAAYlB,EAAMkB,WAClBC,YAAanB,EAAMmB,YACnBZ,QAASP,EAAMO,QACfO,iBAGDrE,EAAM2E,W,QClDAC,EAAY,SAAC5E,GAExB,IAAMqD,EAAcwB,qBAAWC,GACZC,EAAuB/E,EAAlCgF,UAAyBC,EAHC,YAGQjF,EAHR,eAKlC,OACE,oCACIqD,EAAYJ,MAGZ,kBAAC,IAAD,CAAU1C,GAAG,MAFb,kBAAC,IAAD,eAAO2E,OAAQ,SAAClF,GAAD,OAAW,kBAAC+E,EAAc/E,KAAeiF,MCVnDE,EAAe,SAAAnF,GAE1B,IAAMqD,EAAcwB,qBAAWC,GACZC,EAAuB/E,EAAlCgF,UAAyBC,EAHE,YAGOjF,EAHP,eAKnC,OACE,oCACGqD,EAAYJ,MACX,kBAAC,IAAD,eAAOiC,OAAQ,SAAAlF,GAAK,OAAI,kBAAC+E,EAAc/E,KAAeiF,IAEtD,kBAAC,IAAD,CAAU1E,GAAG,Q,QCTR6E,EAAQ,WAAO,IAAD,EAEYC,cAA3BC,EAFe,EAEfA,SAAUC,EAFK,EAELA,aAEVlB,EADYQ,qBAAWC,GACvBT,aAIFmB,EAAQ,uCAAG,WAAMxE,GAAN,SAAAQ,EAAA,+EAEH6C,EAAarD,GAFV,sDAMTc,QAAQC,IAAR,MANS,wDAAH,sDAUd,OACI,6BACI,0BAAMyD,SAAUD,EAAaC,IACzB,2BACI9C,KAAK,WACLe,KAAK,OACLgC,IAAKH,IAEN,2BACC5C,KAAK,WACLe,KAAK,OACLgC,IAAKH,IAEN,2BACA7B,KAAK,WACJf,KAAK,WACL+C,IAAKH,IAEb,2DCnCCI,EAAS,WAClB,IAAMtE,EAAUC,cADQ,EAEmBgE,cAAnCC,EAFgB,EAEhBA,SAAUC,EAFM,EAENA,aAAcI,EAFR,EAEQA,OAFR,EAGU1F,oBAAS,GAHnB,mBAGjB2F,EAHiB,KAGNC,EAHM,OAIE5F,mBAAS,IAJX,mBAIjB6F,EAJiB,KAIVC,EAJU,KAMlBP,EAAQ,uCAAG,WAAMxE,GAAN,SAAAQ,EAAA,+EAELT,EAAOC,GAFF,OAGT6E,GAAa,GACbzE,EAAQyB,KAAK,UAJJ,gDAOTkD,EAAS,uCAPA,yDAAH,sDAYd,OACI,6BACS,0BAAMP,SAAUD,EAAaC,IAC5BG,EAAOjD,MAAQ,kCAAQiD,EAAOjD,KAAKqB,QAAU4B,EAAOjD,KAAKqB,QAAU,4BAApD,KACjB,8BAAO+B,GACN,2BACGpD,KAAK,OACLe,KAAK,OACLuC,YAAY,SACZP,IAAKH,EAAS,CAACW,UAAS,MAEzBN,EAAOtD,UAAY,kCAAQsD,EAAOtD,SAAS0B,QAAU4B,EAAOtD,SAAS0B,QAAU,4BAA5D,KACtB,2BACIrB,KAAK,WACLe,KAAK,OACLgC,IAAKH,EAAS,CAACW,UAAS,IACxBD,YAAY,WAEbL,EAAOO,UAAY,kCAAQP,EAAOO,SAASnC,QAAU4B,EAAOO,SAASnC,QAAU,4BAA5D,KACnB,2BACCrB,KAAK,WACLe,KAAK,OACLgC,IAAKH,EAAS,CAACW,UAAS,IACxBD,YAAY,kBAEb,2BACAvC,KAAK,WACJf,KAAK,WACL+C,IAAKH,IAGLM,EACJ,+CAEA,wDC/CDO,EARG,SAAAlD,GACXA,EACCxC,EAAc2F,SAASC,QAAQC,OAA/B,cAAyDrD,SAElDxC,EAAc2F,SAASC,QAAQC,OAA/B,eCOTrD,EAAQN,aAAaO,QAAQ,SAChCD,GAAOkD,EAAUlD,GAEb,IAAMsD,EAAM,SAANA,IAEX,OACE,kBAAC,IAAD,KACA,kBAAC,EAAD,KACI,kBAAC,IAAD,CAAQvB,UAAWuB,GACjB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIzB,UAAWjC,IACjC,kBAAC,EAAD,CAAWyD,OAAK,EAACC,KAAK,UAAUzB,UAAWU,IAC3C,kBAAC,EAAD,CAAWc,OAAK,EAACC,KAAK,SAASzB,UAAWI,IAC1C,kBAAC,EAAD,CAAcoB,OAAK,EAACC,KAAK,qBAAqBvE,YAAU,sBAAsB8C,UAAW7D,IACzF,kBAAC,EAAD,CAAcqF,OAAK,EAACC,KAAK,uBAAuBvE,YAAU,sBAAsB8C,UAAWlC,QCd/F4D,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASpF,MACvB,2DAsCN,SAASqF,EAAgBC,EAAOC,GAC9BC,UAAUC,cACP7B,SAAS0B,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBhE,QACf2D,UAAUC,cAAcO,YAI1B5F,QAAQC,IACN,iHAKEkF,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBvF,QAAQC,IAAI,sCAGRkF,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BQ,OAAM,SAAA/B,GACLhE,QAAQgE,MAAM,4CAA6CA,MC1FjEgC,IAAS5C,OACP,kBAAC,IAAM6C,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDYnB,SAAkBhB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIgB,IAAIrH,GAAwB+F,OAAOC,SAASrG,MACpD2H,SAAWvB,OAAOC,SAASsB,OAIvC,OAGFvB,OAAOwB,iBAAiB,QAAQ,WAC9B,IAAMpB,EAAK,UAAMnG,GAAN,sBAEP6F,IAgEV,SAAiCM,EAAOC,GAEtCoB,MAAMrB,EAAO,CACXX,QAAS,CAAE,iBAAkB,YAE5Be,MAAK,SAAAkB,GAEJ,IAAMC,EAAcD,EAASjC,QAAQzE,IAAI,gBAEnB,MAApB0G,EAAShE,QACO,MAAfiE,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5CtB,UAAUC,cAAcsB,MAAMrB,MAAK,SAAAC,GACjCA,EAAaqB,aAAatB,MAAK,WAC7BR,OAAOC,SAAS8B,eAKpB5B,EAAgBC,EAAOC,MAG1BY,OAAM,WACL/F,QAAQC,IACN,oEAvFA6G,CAAwB5B,EAAOC,GAI/BC,UAAUC,cAAcsB,MAAMrB,MAAK,WACjCtF,QAAQC,IACN,iHAMJgF,EAAgBC,EAAOC,OClC/BE,K","file":"static/js/main.a1c019ba.chunk.js","sourcesContent":["import React, { useState} from 'react';\r\nimport '../CSS/slideMenu.css';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst SideBar = (props) => {\r\n    \r\n    const [menuOpen, setMenuOpen] = useState(true);\r\n\r\n    const handleStateChange = () => {\r\n        setMenuOpen(!menuOpen)\r\n    }\r\n    const closeMenuHandler = () => {\r\n        setMenuOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div className='bg-component'>\r\n        <div className='div-buttons'>\r\n            <button className='btn-categories' onClick={handleStateChange}> CATEGOR√çAS</button>\r\n            <Link to='/create-task/'>\r\n            <button className='btn-categories'> + NUEVA TAREA</button>\r\n\r\n            </Link>\r\n        </div>\r\n                    \r\n            {\r\n                menuOpen ?\r\n\r\n                    <div className='userMenu slide-right'>\r\n                        <button className='close-menu' onClick={closeMenuHandler}><i className=\"far fa-times-circle close-menu\"></i></button>\r\n                      \r\n                       <button onClick={closeMenuHandler} className=\"menu-item bm-icon bm-item btn-handler btn-homeinfo\">\r\n                            <i className=\"fas fa-home\"></i> <a className='a-links' href='#Home'>PENDIENTES</a>\r\n                        </button>\r\n\r\n                     \r\n                        <button onClick={closeMenuHandler} className=\"menu-item bm-icon bm-item btn-handler btn-homeinfo\">\r\n                            <i className=\"far fa-address-card\"></i> <a className='a-links' href='#About'>COMPLETADAS</a>\r\n                        </button>\r\n                        <button onClick={closeMenuHandler} className=\"menu-item bm-icon bm-item btn-handler btn-homeinfo portfolio\">\r\n                            <i className=\"fas fa-folder-open\"></i> <a className='a-links' href='#PortFolio'>TRABAJO</a>\r\n                        </button>\r\n                        <button onClick={closeMenuHandler} className=\"menu-item bm-icon bm-item btn-handler btn-homeinfo\">\r\n                            <i className=\"fas fa-envelope-open-text\"></i> <a className='a-links' href='#Contact'>SUPERMERCADO</a>\r\n                        </button>\r\n                        <button onClick={closeMenuHandler} className=\"menu-item bm-icon bm-item btn-handler btn-homeinfo\">\r\n                            <i className=\"fas fa-envelope-open-text\"></i> <a className='a-links' href='#Contact'>IMPORTANTES</a>\r\n                        </button>\r\n                    </div>\r\n                    :\r\n                    <div className='userMenu slide-left'>\r\n                        <button className='close-menu' onClick={closeMenuHandler}><i className=\"far fa-times-circle close-menu\"></i></button>\r\n                        <button onClick={closeMenuHandler} className=\"menu-item bm-icon bm-item btn-handler btn-homeinfo\">\r\n                            Home\r\n                        </button>\r\n                        <button onClick={closeMenuHandler} className=\"menu-item bm-icon bm-item btn-handler btn-homeinfo\">\r\n                             About\r\n                        </button>\r\n                        <button onClick={closeMenuHandler} className=\"menu-item bm-icon bm-item btn-handler btn-homeinfo portfolio\">\r\n                            Portfolio\r\n                        </button>\r\n                        <button onClick={closeMenuHandler} className=\"menu-item bm-icon bm-item btn-handler btn-homeinfo\">\r\n                             Contact\r\n                        </button>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n export default SideBar","import axios from 'axios';\r\n\r\nexport const axiosInstance = axios.create({\r\n\tbaseURL:`${process.env.REACT_APP_API_URI}`,\r\n\twithCredentials: true\r\n});\r\n\r\n// axiosInstance.interceptors.response.use(response => {\r\n\r\n// \treturn response.data;\r\n// }, error => {\r\n// \treturn Promise.reject(error);\r\n// });","import {axiosInstance} from './api'\r\n\r\n//userCalls\r\n\r\nexport const signup = (data) => {\r\n    return axiosInstance.post('/signup', data);\r\n};\r\n\r\nexport const login = (data) => {\r\n    return axiosInstance.post('/login', data);\r\n};\r\n\r\nexport const logout = () => {\r\n    return axiosInstance.post('/logout', {});\r\n\r\n};\r\n\r\nexport const getDashboard = (userId) => {\r\n    return axiosInstance.get(`/dashboard/${userId}`);\r\n};\r\n\r\n//TaskCalls\r\n\r\nexport const createTask = (id, data) => {\r\n    return axiosInstance.post(`/create-task/${id}`, data);\r\n};\r\n\r\nexport const deleteTask = (userId, taskId, data) => {\r\n    return axiosInstance.post(`/delete-task/${userId}/${taskId}`, data);\r\n};\r\n\r\nexport const editTask = (userId, taskId, data) => {\r\n    return axiosInstance.post(`/edit-task/${userId}/${taskId}`, data)\r\n}","import React , { useEffect, useState} from 'react';\r\nimport SideBar from './SideBar';\r\nimport '../CSS/dashboard.css'\r\nimport { getDashboard } from '../api/apiCalls'\r\nimport {logout} from '../api/apiCalls';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Dashboard = (props) => {\r\n \r\n   const history = useHistory();\r\n   const [data, setData] = useState('')\r\n   const [userTasks, setUserTasks] = useState([])\r\n   \r\n    useEffect(() => {\r\n        const getUserData = async () => {\r\n          const result =  await getDashboard(props.match.params.userId)\r\n          console.log(result)\r\n        };\r\n\r\n        getUserData()\r\n    }, [props.match.params.userId]);\r\n    \r\n    console.log(data.tasks)\r\n    const handleClickLogout = () => {\r\n        logout()\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n        history.push('/');\r\n    \r\n      }\r\n    \r\n    return (\r\n        <div data-test='app-component'>\r\n            <div >\r\n                <img className='logo' src='/list-2389219_640-removebg-preview.png' alt='pic' data-test='image-logo' />\r\n                            <h2 className='h2-name'>Hola {data.nickName}</h2>\r\n                            <p className='p-title-tasks'>Estas son tus √∫ltimas tareas.</p>\r\n                            <div> {\r\n                                userTasks.map((task, index) => {\r\n                                    return (\r\n                                        <div key={index}>\r\n                                        <p>{task.name}</p>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </div>\r\n                                \r\n                            <SideBar {...props} data-test='sidebar-component'/>\r\n            </div>\r\n            \r\n              \r\n        <button onClick={handleClickLogout}>Cerrar Sesi√≥n</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React from 'react'\r\nimport SideBar from './SideBar';\r\n\r\nexport const NewTask = () => {\r\n    return (\r\n        <div>\r\n            <h3>Create new task</h3>\r\n            <SideBar data-test='sidebar-component'/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../CSS/home.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const Home = () => {\r\n    \r\n\r\n    let token = localStorage.getItem('user');\r\n    let currentUserId;\r\n\r\n    if (token !== null) {\r\n      let parsedCurrentUserId = JSON.parse(token);\r\n      currentUserId = parsedCurrentUserId.userId;\r\n    \r\n    }\r\n\r\n    return (\r\n        <div className='background-home'>\r\n        <Link to='/signup' ><button>Registrarse</button></Link>\r\n            <>\r\n        {\r\n            token ?\r\n\r\n        <Link to={`/dashboard/${currentUserId}`} ><button>Ir a mi escritorio</button> </Link>\r\n        \r\n        :\r\n        <Link to='/login' ><button>Iniciar Sesi√≥n</button> </Link>\r\n        \r\n        }\r\n        </>\r\n\r\n        </div>\r\n    )\r\n}\r\n","  \r\nimport { createContext } from 'react';\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;","import { LOGIN_SUCCESS, LOGIN_ERROR} from '../constants/index';\r\n\r\nexport default (state, action) => {\r\n\tswitch(action.type) {\r\n\r\n\t\tcase LOGIN_SUCCESS:\r\n\t\t\tlocalStorage.setItem('token', action.payload.token);\r\n            localStorage.setItem('user', JSON.stringify(action.payload.user));\r\n        \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: action.payload.token,\r\n                user: action.payload.user,\r\n\t\t\t\tloading: false\r\n            }\t\t\r\n\r\n\t\tcase LOGIN_ERROR:\r\n\t\t\tlocalStorage.removeItem('token');\r\n\t\t\tlocalStorage.removeItem('user');\r\n            \r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\ttoken: null,\r\n                    user: null,\r\n\t\t\t\t\tmessage: action.payload, \r\n                    loading: false\r\n\t\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n} \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* import { \r\n  LOGIN_SUCCESS,\r\n  LOGIN_ERROR,\r\n  USER_REQUEST,\r\n  LOGOUT\r\n} from '../../constants';\r\n\r\nexport default (state, action) => {\r\n  switch(action.type) {\r\n      case LOGIN_SUCCESS:\r\n          localStorage.setItem('token', action.payload.token);\r\n          return {\r\n              ...state,\r\n              auth: true,\r\n              loading: false\r\n          }\r\n      case USER_REQUEST: \r\n          return {\r\n              ...state,\r\n              auth: true,\r\n              user: action.payload, \r\n              loading: false\r\n          }\r\n      case LOGOUT:\r\n      case LOGIN_ERROR:\r\n          localStorage.removeItem('token');\r\n          return {\r\n              ...state,\r\n              token: null,\r\n              user: null,\r\n              auth: null,\r\n              message: action.payload, \r\n              loading: false\r\n          }\r\n      \r\n      default:\r\n          return state;\r\n  }\r\n} */","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useReducer } from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\nimport { login } from '../api/apiCalls';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nimport { LOGIN_SUCCESS, LOGIN_ERROR } from '../constants/index';\r\n\r\nexport const AuthState = props => {\r\n  \r\n  const initialState = {\r\n    user: localStorage.getItem(\"user\") ,\r\n    token: localStorage.getItem(\"token\"),\r\n    loading: true  \r\n  };\r\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n  const history = useHistory();\r\n\r\n\r\n  const authenticate = async (data) => {\r\n    try{\r\n      const result = await login(data);\r\n    \r\n      if (result.status === 200) {\r\n        dispatch({type:LOGIN_SUCCESS, payload: result.data})\r\n   \r\n         history.push(`/dashboard/${result.data.user.userId}`);\r\n \r\n         } else {\r\n           dispatch({ type: LOGIN_ERROR, payload: result.status })\r\n           history.push(`/login`);\r\n         }\r\n\r\n   } catch(error) {\r\n          dispatch({type:LOGIN_ERROR, payload: error})\r\n\r\n      }\r\n      \r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        user: state.user,\r\n        isVerified: state.isVerified,\r\n        isCompleted: state.isCompleted,\r\n        loading: state.loading,\r\n        authenticate,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport AuthContext from '../auth/authContext';\r\n\r\nexport const AnonRoute = (props) => { \r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { component: Component, ...rest } = props; \r\n\r\n  return (\r\n    <>\r\n      {!authContext.token ? ( \r\n        <Route render={(props) => <Component {...props} />} {...rest} /> \r\n      ) : (\r\n        <Redirect to=\"/\" /> \r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthContext from '../auth/authContext';\r\nexport const PrivateRoute = props => {\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { component: Component, ...rest } = props;\r\n\r\n  return (\r\n    <>\r\n      {authContext.token ? ( \r\n        <Route render={props => <Component {...props} />} {...rest} />\r\n      ) : (\r\n        <Redirect to=\"/\" /> \r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport AuthContext from '../auth/authContext';\r\n\r\nexport const Login = () => {\r\n\r\n    const { register, handleSubmit } = useForm();\r\n    const authContext = useContext(AuthContext);\r\n    const { authenticate } = authContext;\r\n    // const [isLoading, setisLoading] = useState(true)\r\n    // const [error, setError] = useState(false)\r\n\r\n    const onSubmit = async data => {\r\n        try {\r\n            await authenticate(data)\r\n            // setisLoading(false);\r\n                \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <input\r\n                    name='nickName'\r\n                    type='text'\r\n                    ref={register}\r\n                />\r\n                   <input\r\n                    name='password'\r\n                    type='text'\r\n                    ref={register}\r\n                />\r\n                   <input\r\n                   type='checkbox'\r\n                    name='remember'\r\n                    ref={register}\r\n                />\r\n            <button>Acceder en mi cuenta</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {signup} from '../api/apiCalls';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const Signup = () => {\r\n    const history = useHistory();\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [isLoading, setisLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n    \r\n    const onSubmit = async data => {\r\n        try {\r\n          await signup(data);\r\n            setisLoading(false);\r\n            history.push('/login')\r\n\r\n        } catch (error) {\r\n            setError('ya existe un usuario con ese avatar')\r\n        }\r\n    };\r\n\r\n    \r\n    return (\r\n        <div>\r\n                 <form onSubmit={handleSubmit(onSubmit)}>\r\n                 {errors.name && <span> {errors.name.message ? errors.name.message : 'Este campo es obligatorio'} </span>}\r\n                <span>{error}</span>\r\n                 <input\r\n                    name='name'\r\n                    type='text'\r\n                    placeholder='Nombre'\r\n                    ref={register({required:true})}\r\n                />\r\n                  {errors.nickName && <span> {errors.nickName.message ? errors.nickName.message : 'Este campo es obligatorio'} </span>}\r\n                <input\r\n                    name='nickName'\r\n                    type='text'\r\n                    ref={register({required:true})}\r\n                    placeholder='Avatar'\r\n                />\r\n                  {errors.password && <span> {errors.password.message ? errors.password.message : 'Este campo es obligatorio'} </span>}\r\n                   <input\r\n                    name='password'\r\n                    type='text'\r\n                    ref={register({required:true})}\r\n                    placeholder='Contrase√±a'\r\n                />\r\n                   <input\r\n                   type='checkbox'\r\n                    name='remember'\r\n                    ref={register}\r\n                />\r\n                {\r\n                    isLoading ?\r\n                <button>Registrarse</button>\r\n                :\r\n                <p>Gracias por registrate</p>\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import {axiosInstance} from '../api/api';\r\n\r\nconst tokenAuth = token => {\r\n    if(token) {\r\n        axiosInstance.defaults.headers.common['Authorization'] = token;\r\n    } else {\r\n        delete axiosInstance.defaults.headers.common['Authorization'];\r\n    }\r\n}\r\n\r\nexport default tokenAuth;","import React from 'react';\r\nimport  Dashboard  from './Components/Dashboard';\r\nimport { Route } from \"react-router-dom\";\r\nimport { BrowserRouter as Router, Switch,  } from \"react-router-dom\";\r\nimport { NewTask } from './Components/NewTask';\r\nimport {Home} from './Components/Home';\r\nimport { AuthState } from \"./auth/authState\";\r\nimport { AnonRoute } from \"./Routes/AnonRoute\";\r\nimport { PrivateRoute } from \"./Routes/PrivateRoute\";\r\nimport { Login } from './Components/Login';\r\nimport {Signup} from './Components/Signup';\r\nimport tokenAuth from './config/token';\r\n\r\nconst token = localStorage.getItem('token');\r\nif(token) tokenAuth(token)\r\n\r\nexport const App = () => {\r\n\r\n  return (\r\n    <Router>\r\n    <AuthState>\r\n        <Switch component={App}>\r\n          <Route exact path='/' component={Home}/>\r\n          <AnonRoute exact path='/signup' component={Signup} />\r\n          <AnonRoute exact path='/login' component={Login}/>\r\n          <PrivateRoute exact path='/dashboard/:userId' data-test='dashboard-component' component={Dashboard}/>\r\n          <PrivateRoute exact path='/create-task/:userId' data-test='dashboard-component' component={NewTask}/>\r\n        </Switch>\r\n    </AuthState>\r\n    </Router>\r\n  );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}